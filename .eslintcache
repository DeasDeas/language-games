[{"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\index.js":"1","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\reportWebVitals.js":"2","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\pictures\\picturesSlice.js":"3","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\app\\store.js":"4","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\PictureCard\\PictureCard.js":"5","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\App\\App.js":"6","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Button\\Button.js":"7","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\UserPanel\\LogInButton\\LogInButton.js":"8","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\UserPanel\\UserPanel.js":"9","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\Header.js":"10","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthButton\\AuthButton.js":"11","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthSelection\\AuthSelection.js":"12","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthLogIn\\AuthLogIn.js":"13","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthRegister\\AuthRegister.js":"14","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\UserPanel\\HomeButton\\HomeButton.js":"15","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\auth\\authSlice.js":"16","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\UserPanel\\UserWindow\\UserWindow.js":"17","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Frame\\Frame.js":"18","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\CardFrame\\CardFrame.js":"19","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\MainMenu\\MainMenu.js":"20","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\MainMenu\\MainMenuFrame\\MainMenuFrame.js":"21","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\MainMenu\\MenuItem\\MenuItem.js":"22","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\task\\taskSlice.js":"23","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\game\\gameSlice.js":"24","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Panel\\Panel.js":"25","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\SetCard\\SetCard.js":"26","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\WordCard\\WordCard.js":"27","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\constants.js":"28","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\GameManager\\GameManager.js":"29","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\GameWrapper\\GameWrapper.js":"30","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\Nav\\Nav.js":"31"},{"size":615,"mtime":1612446310761,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":1499,"mtime":1612622207388,"results":"35","hashOfConfig":"33"},{"size":342,"mtime":1613071468120,"results":"36","hashOfConfig":"33"},{"size":1584,"mtime":1613338479597,"results":"37","hashOfConfig":"33"},{"size":1763,"mtime":1613500856345,"results":"38","hashOfConfig":"33"},{"size":377,"mtime":1613318459817,"results":"39","hashOfConfig":"33"},{"size":270,"mtime":1612482625575,"results":"40","hashOfConfig":"33"},{"size":743,"mtime":1613409756085,"results":"41","hashOfConfig":"33"},{"size":531,"mtime":1613500856303,"results":"42","hashOfConfig":"33"},{"size":317,"mtime":1612726516948,"results":"43","hashOfConfig":"33"},{"size":701,"mtime":1612725895389,"results":"44","hashOfConfig":"33"},{"size":2059,"mtime":1613504749872,"results":"45","hashOfConfig":"33"},{"size":2880,"mtime":1612898234522,"results":"46","hashOfConfig":"33"},{"size":299,"mtime":1612629773655,"results":"47","hashOfConfig":"33"},{"size":2535,"mtime":1613507022134,"results":"48","hashOfConfig":"33"},{"size":1030,"mtime":1612995186748,"results":"49","hashOfConfig":"33"},{"size":210,"mtime":1612961441553,"results":"50","hashOfConfig":"33"},{"size":201,"mtime":1612907022715,"results":"51","hashOfConfig":"33"},{"size":1366,"mtime":1613506995902,"results":"52","hashOfConfig":"33"},{"size":238,"mtime":1612961495061,"results":"53","hashOfConfig":"33"},{"size":246,"mtime":1612962983481,"results":"54","hashOfConfig":"33"},{"size":1548,"mtime":1613075005819,"results":"55","hashOfConfig":"33"},{"size":5260,"mtime":1613512125022,"results":"56","hashOfConfig":"33"},{"size":250,"mtime":1613153856881,"results":"57","hashOfConfig":"33"},{"size":1842,"mtime":1613400892507,"results":"58","hashOfConfig":"33"},{"size":599,"mtime":1613249629049,"results":"59","hashOfConfig":"33"},{"size":45,"mtime":1613241031358,"results":"60","hashOfConfig":"33"},{"size":4139,"mtime":1613507958276,"results":"61","hashOfConfig":"33"},{"size":1220,"mtime":1613513624358,"results":"62","hashOfConfig":"33"},{"size":452,"mtime":1613409591698,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1dkrs64",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\index.js",[],["138","139"],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\reportWebVitals.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\pictures\\picturesSlice.js",[],["140","141"],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\app\\store.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\PictureCard\\PictureCard.js",["142","143"],"import React, {useEffect} from \"react\";\nimport classes from \"./PictureCard.module.css\";\nimport { ItemTypes } from \"../../constants\";\nimport { useDrop } from \"react-dnd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { placeWord, returnWord } from \"../../features/game/gameSlice\";\n\nexport const PictureCard = (props) => {\n  const dispatch = useDispatch();\n\n  const [{ isOver }, drop] = useDrop({\n    accept: ItemTypes.WORD,\n    drop: (item) => {\n      dispatch(\n        placeWord({\n          word: item.word,\n          position: props.position,\n          setId: props.setId,\n          prevWord: props.word,\n        })\n      );\n    },\n    collect: (monitor) => ({ isOver: !!monitor.isOver() }),\n  });\n\n  const isCorrect = props.word === props.correctWord;\n\n  return (\n    <div\n      className={classes.PictureCard}\n      style={{\n        outline: props.completed && (`2px solid ${isCorrect ? \"#73ee65\" : \"#f53831\"}`),\n      }}\n    >\n      <img src={props.src} alt=\"\" />\n      <div\n        ref={drop}\n        style={\n          isOver\n            ? { background: \"rgb(129,215,241, 0.5)\" }\n            : { background: \"white\" }\n        }\n        className={classes.WordSpace}\n        onDoubleClick={() => {\n          dispatch(\n            returnWord({\n              word: props.word,\n              position: props.position,\n              setId: props.setId,\n            })\n          );\n        }}\n        title=\"Нажмите два раза для того, чтобы удалить слово\"\n      >\n        {props.word}\n      </div>\n    </div>\n  );\n};\n","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\App\\App.js",["144"],"import \"./App.css\";\nimport React, { useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect, NavLink,\n} from \"react-router-dom\";\nimport { Header } from \"../Header/Header\";\nimport { AuthSelection } from \"../Auth/AuthSelection/AuthSelection\";\nimport { AuthLogIn } from \"../Auth/AuthLogIn/AuthLogIn\";\nimport { AuthRegister } from \"../Auth/AuthRegister/AuthRegister\";\nimport { getUser } from \"../../features/auth/authSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { MainMenu } from \"../MainMenu/MainMenu\";\nimport { GameWrapper } from \"../GameWrapper/GameWrapper\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const authCheckStatus = useSelector((state) => state.auth.status);\n  const isAuthenticated = useSelector((state) => state.auth.authenticated);\n\n  useEffect(() => {\n    authCheckStatus === \"idle\" && dispatch(getUser());\n  });\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header authCheckStatus={authCheckStatus} />\n        <main className=\"contentWrapper\">\n          <Switch>\n            <Route exact path=\"/\">\n              <MainMenu/>\n            </Route>\n            <Route exact path=\"/auth\">\n              {!isAuthenticated ? <AuthSelection /> : <Redirect to={`/`} />}\n            </Route>\n            <Route path=\"/auth/login\">\n              {!isAuthenticated ? <AuthLogIn /> : <Redirect to={`/`} />}\n            </Route>\n            <Route path=\"/auth/register\">\n              {!isAuthenticated ? <AuthRegister /> : <Redirect to={`/`} />}\n            </Route>\n            <Route path=\"/game/\">\n              <GameWrapper />\n            </Route>\n          </Switch>\n        </main>\n        <footer></footer>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Button\\Button.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\UserPanel\\LogInButton\\LogInButton.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\UserPanel\\UserPanel.js",["145"],"import React from \"react\";\nimport classes from \"./UserPanel.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { LogInButton } from \"./LogInButton/LogInButton\";\nimport { UserWindow } from \"./UserWindow/UserWindow\";\nimport { HomeButton } from \"./HomeButton/HomeButton\";\nimport { useSelector } from \"react-redux\";\n\nexport const UserPanel = (props) => {\n  const isInAuth = /\\/auth/.test(props.currentRoute.pathname);\n  const isAuthenticated = useSelector((state) => state.auth.authenticated);\n\n  return (\n    <div className={classes.UserPanel}>\n      {!isInAuth && !isAuthenticated && (\n        <NavLink to={\"/auth\"}>\n          <LogInButton />\n        </NavLink>\n      )}\n      {isAuthenticated && <UserWindow />}\n    </div>\n  );\n};\n","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\Header.js",["146","147"],"import React, { useEffect } from \"react\";\r\nimport classes from \"./Header.module.css\"\r\nimport { UserPanel } from \"./UserPanel/UserPanel\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useLocation } from \"react-router-dom\"\r\nimport { Nav } from \"./Nav/Nav\";\r\n\r\nexport const Header = (props) => {\r\n\tconst user = useSelector(state => state.auth.user);\r\n\tconst currentRoute = useLocation();\r\n\r\n\treturn (\r\n\t\t\t<div className={classes.Header}>\r\n\t\t\t\t<Nav/>\r\n\t\t\t\t<UserPanel user={user} currentRoute={currentRoute} />\r\n\t\t\t</div>\r\n\t\t)\r\n}","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthButton\\AuthButton.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthSelection\\AuthSelection.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthLogIn\\AuthLogIn.js",["148","149"],"import React, { useEffect, useRef, useState } from \"react\";\nimport classes from \"../Auth.module.css\";\nimport { AuthButton } from \"../AuthButton/AuthButton\";\nimport { useHistory } from \"react-router-dom\";\nimport { authenticateUser, getUser } from \"../../../features/auth/authSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\n\nexport const AuthLogIn = () => {\n  let history = useHistory();\n  const dispatch = useDispatch();\n\n  const username = useRef(null);\n  const password = useRef(null);\n  const [redOutline, setRedOutline] = useState(\"\");\n\n  return (\n    <form\n      className={classes.Frame}\n      onSubmit={async (e) => {\n        e.preventDefault();\n        try {\n          const resultAction = await dispatch(\n            authenticateUser({\n              username: username.current.value,\n              password: password.current.value,\n            })\n          );\n          unwrapResult(resultAction);\n          history.push(\"/\");\n          dispatch(getUser());\n        } catch (err) {\n          password.current.value = '';\n          setRedOutline(classes.redOutline);\n        }\n      }}\n    >\n      <div className={classes.FormContent}>\n        <div className={classes.input}>\n          <span>Login</span>\n          <input\n            className={redOutline}\n            type=\"text\"\n            onChange={(e) => {\n              e.target.className = \"\";\n            }}\n            ref={username}\n            required\n          />\n        </div>\n        <div className={classes.input}>\n          <span>Password</span>\n          <input\n            className={redOutline}\n            type=\"password\"\n            ref={password}\n            onChange={(e) => {\n              e.target.className = \"\";\n            }}\n            required\n            autoComplete=\"on\"\n          />\n        </div>\n        <AuthButton\n          styleClasses={`${classes.SingInButton} ${classes.stretchButton}`}\n          value=\"submit\"\n        >\n          Apply\n        </AuthButton>\n      </div>\n    </form>\n  );\n};\n","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthRegister\\AuthRegister.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\UserPanel\\HomeButton\\HomeButton.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\auth\\authSlice.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\UserPanel\\UserWindow\\UserWindow.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Frame\\Frame.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\CardFrame\\CardFrame.js",[],["150","151"],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\MainMenu\\MainMenu.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\MainMenu\\MainMenuFrame\\MainMenuFrame.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\MainMenu\\MenuItem\\MenuItem.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\task\\taskSlice.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\game\\gameSlice.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Panel\\Panel.js",[],["152","153"],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\SetCard\\SetCard.js",["154"],"import React, { useState } from \"react\";\nimport { Frame } from \"../Frame/Frame\";\nimport classes from \"./SetCard.module.css\";\nimport { Panel } from \"../Panel/Panel\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { Button } from \"../Button/Button\";\n\nexport const SetCard = (props) => {\n  const completeButtonStyles =\n    !props.completeDisabled && !props.completeState\n      ? { styleClasses: classes.SubmitButton }\n      : { styleClasses: classes.SubmitButton__disabled };\n\n  const attempts = props.repeatable;\n\n  const redoButtonStyles =\n    attempts !== 0 && props.completeState\n      ? { styleClasses: classes.RedoButton }\n      : { styleClasses: classes.RedoButton__disabled };\n\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Frame styles={classes.SetCard}>\n        <Panel styles={classes.PicturesWrapper}>{props.pictures}</Panel>\n        <Panel styles={classes.WordsWrapper}>{props.words}</Panel>\n        <div className={classes.ControlsWrapper}>\n          <Button\n            design={completeButtonStyles}\n            disabled={props.completeDisabled || props.completeState}\n            click={props.completeHandler}\n          >\n            Complete\n          </Button>\n          <div className={classes.RedoWrapper}>\n            <span className={classes.Counter}>Attempts: <b>{attempts}</b></span>\n            <Button\n              design={redoButtonStyles}\n              disabled={!(attempts !== 0 && props.completeState)}\n              click={props.redoHandler}\n            >\n              Redo\n            </Button>\n          </div>\n          <Button\n            design={{ styleClasses: classes.RefreshButton }}\n            click={props.refreshHandler}\n          >\n            Refresh\n          </Button>\n        </div>\n      </Frame>\n    </DndProvider>\n  );\n};\n","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\WordCard\\WordCard.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\constants.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\GameManager\\GameManager.js",["155"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SetCard } from \"../SetCard/SetCard\";\nimport classes from \"./GameManager.module.css\";\nimport { PictureCard } from \"../PictureCard/PictureCard\";\nimport { WordCard } from \"../WordCard/WordCard\";\nimport {\n  readFromLocal,\n  switchSet,\n  completeSet,\n  redoSet, getData,\n} from \"../../features/game/gameSlice\";\n\nexport const GameManager = (props) => {\n  const currentSet = useSelector((state) => state.game.currentSet);\n  const dispatch = useDispatch();\n  const game = useSelector((state) => state.game);\n  const setsQ = game.sets.allIds.length;\n\n  const refreshHandler = () => {\n    dispatch(getData(window.location.pathname.match(/\\d+$/)[0]))\n  }\n\n  const completeDisabled =\n    game.session &&\n    !(game.sets.byId[game.sets.allIds[currentSet - 1]].wordsOrder.length === 0);\n\n  const correctWords =\n    game.session &&\n    game.sets.byId[game.sets.allIds[currentSet - 1]].picturesOrder.map(\n      (pictureId) => {\n        return game.pictures.byId[pictureId].word;\n      }\n    );\n\n  const redoHandler = () => {\n    dispatch(\n      redoSet({\n        setId: game.sets.allIds[currentSet - 1],\n      })\n    );\n  };\n\n  const completeHandler = () => {\n    dispatch(\n      completeSet({\n        setId: game.sets.allIds[currentSet - 1],\n        correctWords: correctWords,\n      })\n    );\n  };\n\n  const getWords = () =>\n    game.sets.byId[game.sets.allIds[currentSet - 1]].wordsOrder.map(\n      (word, idx) => {\n        return <WordCard word={word} key={`picture${idx}`} id={`word${idx}`} />;\n      }\n    );\n\n  const wordsResult = useSelector(\n    (state) => state.game.results[game.sets.allIds[currentSet - 1]]\n  );\n\n  useEffect(() => {\n    !game.session &&\n      dispatch(\n        readFromLocal({\n          sessionId: window.sessionStorage.getItem(\"current_session\"),\n        })\n      );\n  });\n\n  const getPictures = () =>\n    game.sets.byId[game.sets.allIds[currentSet - 1]].picturesOrder.map(\n      (pictureId, idx) => {\n        const { src, word } = game.pictures.byId[pictureId];\n        const wordResult = wordsResult[idx].word;\n\n        return (\n          <PictureCard\n            key={`picture${idx}`}\n            id={`picture${idx}`}\n            src={src}\n            word={wordResult}\n            position={idx}\n            setId={game.sets.allIds[currentSet - 1]}\n            completed={\n              game.sets.byId[game.sets.allIds[currentSet - 1]].completed\n            }\n            correctWord={word}\n            isCorrect={\n              game.results[game.sets.allIds[currentSet - 1]][idx].correct\n            }\n          />\n        );\n      }\n    );\n\n  return (\n    <div className={classes.GameWrapper}>\n      <span className={classes.SetsCounter}>\n        Set <b>{currentSet}</b> / {setsQ}\n      </span>\n      <div className={classes.SetsWrapper}>\n        <button\n          className={`${\n            currentSet === 1 ? classes.Arrow__disabled : classes.Arrow\n          }`}\n          onClick={() => {\n            dispatch(switchSet({ direction: \"left\", length: setsQ }));\n          }}\n          disabled={currentSet === 1}\n        >\n          &#xE76B;\n        </button>\n        <SetCard\n          pictures={game.session && getPictures()}\n          words={game.session && getWords()}\n          completeDisabled={game.session && completeDisabled}\n          completeHandler={completeHandler}\n          redoHandler={redoHandler}\n          completeState={\n            game.session &&\n            game.sets.byId[game.sets.allIds[currentSet - 1]].completed\n          }\n          repeatable={\n            game.session &&\n            game.sets.byId[game.sets.allIds[currentSet - 1]].repeatable\n          }\n          refreshHandler={refreshHandler}\n        />\n        <button\n          className={`${\n            currentSet === setsQ ? classes.Arrow__disabled : classes.Arrow\n          }`}\n          onClick={() => {\n            dispatch(switchSet({ direction: \"right\", length: setsQ }));\n          }}\n          disabled={currentSet === setsQ}\n        >\n          &#xE76C;\n        </button>\n      </div>\n    </div>\n  );\n};\n","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\GameWrapper\\GameWrapper.js",["156"],"import React, { useEffect, useState } from \"react\";\nimport { GameManager } from \"../GameManager/GameManager\";\nimport { getData, readGameState } from \"../../features/game/gameSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport const GameWrapper = (props) => {\n  let dispatch = useDispatch();\n  const [redFromLocal, setRedFromLocal] = useState(false);\n\n  let userId = JSON.parse(window.localStorage.getItem(\"userId\"));\n  const game = useSelector((state) => state.game);\n  const currentSessionId = window.location.pathname.match(/\\d+$/)[0];\n  const localState = JSON.parse(window.localStorage.getItem(`${currentSessionId}`));\n\n  useEffect(() => {\n    if (!redFromLocal && localState && (localState.userId === userId)) {\n        setRedFromLocal(true);\n        dispatch(readGameState(localState));\n    }\n    else if (!redFromLocal && game.dataStatus === \"idle\") {\n      dispatch(getData({ sessionId: currentSessionId, userId: userId }));\n      window.sessionStorage.setItem(\"current_session\", `${currentSessionId}`);\n      setRedFromLocal(false)\n    } else {\n      window.localStorage.setItem(currentSessionId, JSON.stringify(game));\n    }\n  });\n\n  return redFromLocal ? <GameManager /> : <div></div>;\n};\n","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\Nav\\Nav.js",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"157","replacedBy":"161"},{"ruleId":"159","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":1,"column":16,"nodeType":"165","messageId":"166","endLine":1,"endColumn":25},{"ruleId":"163","severity":1,"message":"167","line":5,"column":23,"nodeType":"165","messageId":"166","endLine":5,"endColumn":34},{"ruleId":"163","severity":1,"message":"168","line":7,"column":13,"nodeType":"165","messageId":"166","endLine":7,"endColumn":20},{"ruleId":"163","severity":1,"message":"169","line":6,"column":10,"nodeType":"165","messageId":"166","endLine":6,"endColumn":20},{"ruleId":"163","severity":1,"message":"164","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":26},{"ruleId":"163","severity":1,"message":"170","line":4,"column":23,"nodeType":"165","messageId":"166","endLine":4,"endColumn":34},{"ruleId":"163","severity":1,"message":"164","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":26},{"ruleId":"163","severity":1,"message":"167","line":6,"column":23,"nodeType":"165","messageId":"166","endLine":6,"endColumn":34},{"ruleId":"157","replacedBy":"171"},{"ruleId":"159","replacedBy":"172"},{"ruleId":"157","replacedBy":"173"},{"ruleId":"159","replacedBy":"174"},{"ruleId":"163","severity":1,"message":"175","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":25},{"ruleId":"163","severity":1,"message":"175","line":1,"column":28,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"176","severity":1,"message":"177","line":15,"column":3,"nodeType":"165","endLine":15,"endColumn":12,"suggestions":"178"},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],["179"],["180"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'NavLink' is defined but never used.","'HomeButton' is defined but never used.","'useDispatch' is defined but never used.",["179"],["180"],["179"],["180"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setRedFromLocal'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [redFromLocal, localState, userId, game, dispatch, currentSessionId] as a second argument to the useEffect Hook.",["181"],"no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},"Add dependencies array: [redFromLocal, localState, userId, game, dispatch, currentSessionId]",{"range":"184","text":"185"},[1158,1158],", [redFromLocal, localState, userId, game, dispatch, currentSessionId]"]