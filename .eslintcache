[{"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\index.js":"1","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\reportWebVitals.js":"2","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\app\\store.js":"3","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\App\\App.js":"4","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\constants.js":"5","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\mui\\themes.js":"6","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthLogIn\\index.js":"7","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthRegister\\index.js":"8","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthSelection\\index.js":"9","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\vars\\paths.js":"10","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\index.js":"11","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\templatePage\\index.js":"12","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\TemplatePage\\index.js":"13","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Form\\index.js":"14","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Frame\\index.js":"15","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\MainPage\\index.js":"16","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Footer\\index.js":"17","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\GamesPage\\index.js":"18","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\GamesSelector\\index.js":"19","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\GamesPage\\GameItemPage\\index.js":"20","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\vars\\consts.js":"21","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\Game\\index.js":"22","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Proceed\\index.js":"23","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\Game\\WordSet\\index.js":"24","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\Game\\PictureSet\\index.js":"25","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\GamesSelector\\ItemSeletor.js":"26","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\Game\\Constructor\\index.js":"27","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Stepper\\index.js":"28","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\hooks\\useWindowDimensions\\index.js":"29","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\auth\\index.js":"30","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\gameInstances\\index.js":"31","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\game\\gameMiddleware.js":"32","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\gameInstances\\selectors.js":"33","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\auth\\selectors.js":"34","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\game\\selectors.js":"35","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\pageState\\index.js":"36","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\game\\index.js":"37","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\pageState\\selectors.js":"38","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\contexts\\AnimationContext.js":"39","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\contexts\\GameContext.js":"40","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\ItemPlaceholder\\index.js":"41","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\CreateTaskDialog\\index.js":"42","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\AuthPage\\index.js":"43","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\api\\auth\\index.js":"44","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\api\\routes.js":"45","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\api\\auth\\requests.js":"46","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Message\\index.js":"47","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\auth\\middleware.js":"48","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\hooks\\useFetchData\\index.js":"49","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\api\\items\\index.js":"50","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\api\\items\\requests.js":"51","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\api\\errorHandlers.js":"52"},{"size":789,"mtime":1618091129342,"results":"53","hashOfConfig":"54"},{"size":362,"mtime":499162500000,"results":"55","hashOfConfig":"54"},{"size":1123,"mtime":1618276862565,"results":"56","hashOfConfig":"54"},{"size":1283,"mtime":1619219877505,"results":"57","hashOfConfig":"54"},{"size":167,"mtime":1619121021522,"results":"58","hashOfConfig":"54"},{"size":2293,"mtime":1618091129364,"results":"59","hashOfConfig":"54"},{"size":2499,"mtime":1620079083469,"results":"60","hashOfConfig":"54"},{"size":2769,"mtime":1619315585595,"results":"61","hashOfConfig":"54"},{"size":1427,"mtime":1619387830460,"results":"62","hashOfConfig":"54"},{"size":293,"mtime":1618868621553,"results":"63","hashOfConfig":"54"},{"size":3057,"mtime":1619380302636,"results":"64","hashOfConfig":"54"},{"size":510,"mtime":1616775153176,"results":"65","hashOfConfig":"54"},{"size":1964,"mtime":1619391186784,"results":"66","hashOfConfig":"54"},{"size":1233,"mtime":1619315566949,"results":"67","hashOfConfig":"54"},{"size":293,"mtime":1618869868832,"results":"68","hashOfConfig":"54"},{"size":2444,"mtime":1618091129498,"results":"69","hashOfConfig":"54"},{"size":296,"mtime":1618091129126,"results":"70","hashOfConfig":"54"},{"size":4080,"mtime":1620585731412,"results":"71","hashOfConfig":"54"},{"size":2359,"mtime":1620590881393,"results":"72","hashOfConfig":"54"},{"size":5420,"mtime":1620590445496,"results":"73","hashOfConfig":"54"},{"size":1122,"mtime":1620584884368,"results":"74","hashOfConfig":"54"},{"size":3459,"mtime":1619317221606,"results":"75","hashOfConfig":"54"},{"size":632,"mtime":1619221084893,"results":"76","hashOfConfig":"54"},{"size":476,"mtime":1618091129286,"results":"77","hashOfConfig":"54"},{"size":7284,"mtime":1618790831503,"results":"78","hashOfConfig":"54"},{"size":3147,"mtime":1620590977708,"results":"79","hashOfConfig":"54"},{"size":9928,"mtime":1618848104034,"results":"80","hashOfConfig":"54"},{"size":1634,"mtime":1618341145964,"results":"81","hashOfConfig":"54"},{"size":582,"mtime":1618091129332,"results":"82","hashOfConfig":"54"},{"size":805,"mtime":1620078801864,"results":"83","hashOfConfig":"54"},{"size":597,"mtime":1620584537635,"results":"84","hashOfConfig":"54"},{"size":3235,"mtime":1618091129310,"results":"85","hashOfConfig":"54"},{"size":664,"mtime":1620581664151,"results":"86","hashOfConfig":"54"},{"size":213,"mtime":1619224546096,"results":"87","hashOfConfig":"54"},{"size":2372,"mtime":1618596273826,"results":"88","hashOfConfig":"54"},{"size":538,"mtime":1618091129334,"results":"89","hashOfConfig":"54"},{"size":2785,"mtime":1618596303501,"results":"90","hashOfConfig":"54"},{"size":153,"mtime":1618091129336,"results":"91","hashOfConfig":"54"},{"size":407,"mtime":1619215402300,"results":"92","hashOfConfig":"54"},{"size":265,"mtime":1618777396242,"results":"93","hashOfConfig":"54"},{"size":493,"mtime":1618576076149,"results":"94","hashOfConfig":"54"},{"size":3720,"mtime":1620591082797,"results":"95","hashOfConfig":"54"},{"size":1814,"mtime":1619392450992,"results":"96","hashOfConfig":"54"},{"size":4077,"mtime":1620583928388,"results":"97","hashOfConfig":"54"},{"size":601,"mtime":1620580407001,"results":"98","hashOfConfig":"54"},{"size":1497,"mtime":1619388997645,"results":"99","hashOfConfig":"54"},{"size":609,"mtime":1619312602834,"results":"100","hashOfConfig":"54"},{"size":224,"mtime":1619303767303,"results":"101","hashOfConfig":"54"},{"size":514,"mtime":1620079579622,"results":"102","hashOfConfig":"54"},{"size":1348,"mtime":1620587627848,"results":"103","hashOfConfig":"54"},{"size":525,"mtime":1620585204877,"results":"104","hashOfConfig":"54"},{"size":258,"mtime":1620583928562,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"1dkrs64",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"108"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"108"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"108"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"108"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"108"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"108"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"108"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"108"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"108"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\index.js",[],["224","225"],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\reportWebVitals.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\app\\store.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\App\\App.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\constants.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\mui\\themes.js",["226","227"],"import createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport MiuButton from \"@material-ui/core/Button\";\r\nimport muiTextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\nexport const mainTheme = createMuiTheme({\r\n\toverrides: {\r\n\t\tMuiOutlinedInput: {\r\n\t\t\tinput: {\r\n\t\t\t\tpadding: '0.5rem'\r\n\t\t\t},\r\n\t\t},\r\n\t\tMuiInputLabel:{\r\n\t\t\toutlined:{\r\n\t\t\t\ttransform: \"translate(14px, 10px) scale(1)\",\r\n\t\t\t}\r\n\t\t},\r\n\t\tMuiFormControl: {\r\n\t\t\troot: {\r\n\t\t\t\twidth: \"100%\"\r\n\t\t\t}\r\n\t\t},\r\n\t\tMuiButton: {\r\n\t\t\troot: {\r\n\t\t\t\tminWidth: \"25px\",\r\n\t\t\t}\r\n\t\t},\r\n\t\tMuiAvatar: {\r\n\t\t\troot: {\r\n\t\t\t\twidth: \"75px\",\r\n\t\t\t\theight: \"75px\",\r\n\t\t\t\ttextTransform: \"uppercase\",\r\n\t\t\t\tfontSize: \"2.5rem\"\r\n\t\t\t}\r\n\t\t},\r\n\t\tMuiCardContent: {\r\n\t\t\troot: {\r\n\t\t\t\tpadding: 0,\r\n\t\t\t}\r\n\t\t},\r\n\t\tMuiInputBase: {\r\n\t\t\tinput: {\r\n\t\t\t\tpadding: \"6px 11px 7px 0\",\r\n\t\t\t\ttextOverflow: \"ellipsis\",\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tlight: '#757ce8',\r\n\t\t\tmain: '#3f50b5',\r\n\t\t\tdark: '#002884',\r\n\t\t\tcontrastText: '#fff',\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tlight: '#ff7961',\r\n\t\t\tmain: '#f44336',\r\n\t\t\tdark: '#ba000d',\r\n\t\t\tcontrastText: '#fff',\r\n\t\t},\r\n\t}\r\n});\r\n\r\nmainTheme.palette.green = mainTheme.palette.augmentColor({\r\n\tmain: '#51c68e',\r\n\tcontrastText: '#ffffff',\r\n});\r\n\r\nmainTheme.palette.red = mainTheme.palette.augmentColor({\r\n\tmain: '#b81616',\r\n\tcontrastText: '#ffffff',\r\n});\r\n\r\nmainTheme.palette.orange = mainTheme.palette.augmentColor({\r\n\tmain: '#ffab40',\r\n\tcontrastText: '#ffffff',\r\n});\r\n\r\nconst colors = ['primary', 'secondary', 'green', 'red', 'orange']\r\n\r\nexport const Button = withStyles(theme => ({\r\n\troot: props => {\r\n\t\tconst color = colors.filter(col => props.color === col)\r\n\t\tif (!!color && props.variant === \"contained\") {\r\n\t\t\treturn {\r\n\t\t\t\tcolor: mainTheme.palette[color].contrastText,\r\n\t\t\t\tbackgroundColor: mainTheme.palette[color].main,\r\n\t\t\t\t\"&:hover\": {\r\n\t\t\t\t\tbackgroundColor: mainTheme.palette[color].dark,\r\n\t\t\t\t\t// Reset on touch devices, it doesn't add specificity\r\n\t\t\t\t\t\"@media (hover: none)\": {\r\n\t\t\t\t\t\tbackgroundColor: mainTheme.palette[color].main\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn {}\r\n\t\t}\r\n\t}\r\n}))(MiuButton);\r\n\r\nexport const IconButton = withStyles(theme => ({\r\n\troot: {\r\n\t\tpadding: \"2.5px\",\r\n\t}\r\n}))(Button);","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthLogIn\\index.js",["228"],"import React, { createRef, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Form } from \"../../Form\";\r\nimport { Button } from \"../../../mui/themes\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { LOADING_STATE } from \"../../../vars/consts\";\r\nimport { Proceed } from \"../../Proceed\";\r\nimport { Message } from \"../../Message\";\r\nimport { login as loginRequest } from \"../../../api/auth\";\r\nimport { setCurrentUser } from \"../../../features/auth\";\r\n\r\nexport const AuthLogIn = (props) => {\r\n  const dispatch = useDispatch(),\r\n    usernameRef = createRef(),\r\n    passwordRef = createRef(),\r\n    [animate, setAnimate] = useState(false),\r\n    [animateMessage, setAnimateMessage] = useState(false),\r\n    { toggleAnimation } = props,\r\n    [message, setMessage] = useState({ texts: [\"\"], type: \"default\", status: 0 }),\r\n    [loadingState, setLoadingState] = useState(LOADING_STATE.IDLE);\r\n\r\n  useEffect(() => {\r\n    !animate && toggleAnimation(setAnimate)();\r\n  }, []);\r\n\r\n  const loginForm = {\r\n    byIds: {\r\n      login: {\r\n        id: \"login\",\r\n        ref: usernameRef,\r\n        label: \"login\",\r\n        required: true,\r\n      },\r\n      password: {\r\n        id: \"password\",\r\n        type: \"password\",\r\n        ref: passwordRef,\r\n        label: \"password\",\r\n        required: true,\r\n      },\r\n    },\r\n    allIds: [\"login\", \"password\"],\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    setLoadingState(LOADING_STATE.PENDING);\r\n\r\n    const loginData = {\r\n      username: usernameRef.current.value,\r\n      password: passwordRef.current.value,\r\n      email: \"\",\r\n    };\r\n    const { data, message } = await loginRequest(loginData);\r\n\r\n    message.status === 200 ?\r\n    (dispatch(setCurrentUser(data)) &&\r\n      setLoadingState(LOADING_STATE.FULFILLED)) : setLoadingState(LOADING_STATE.REJECTED);\r\n\r\n    toggleAnimation(setAnimateMessage)(() => setMessage(message));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loadingState === LOADING_STATE.PENDING && <Proceed />}\r\n      <Fade in={animate}>\r\n        <form onSubmit={submitHandler}>\r\n          <Form form={loginForm}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              Login\r\n            </Button>\r\n          </Form>\r\n        </form>\r\n      </Fade>\r\n      <Fade in={animateMessage}>\r\n        <Box>\r\n          <Message type={message.type}>{message.texts}</Message>\r\n        </Box>\r\n      </Fade>\r\n    </>\r\n  );\r\n};","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthRegister\\index.js",["229","230"],"import React, { createRef, useState } from \"react\";\r\n\r\nimport { Form } from \"../../Form\";\r\nimport { Button } from \"../../../mui/themes\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { LOADING_STATE } from \"../../../vars/consts\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Message } from \"../../Message\";\r\nimport {register} from \"../../../api/auth\";\r\n\r\nexport const AuthRegister = (props) => {\r\n  const usernameRef = createRef(),\r\n    passwordRef = createRef(),\r\n    confirmPasswordRef = createRef(),\r\n    emailRef = createRef(),\r\n    [animate, setAnimate] = useState(false),\r\n    [animateMessage, setAnimateMessage] = useState(false),\r\n    { toggleAnimation } = props,\r\n    [message, setMessage] = useState({ texts: [\"\"], type: \"default\", status: 0 }),\r\n    [loadingState, setLoadingState] = useState(LOADING_STATE.IDLE);\r\n\r\n  React.useEffect(() => {\r\n    !animate && props.toggleAnimation(setAnimate)();\r\n  }, [animate]);\r\n\r\n  const registerForm = {\r\n    byIds: {\r\n      login: {\r\n        id: \"login\",\r\n        ref: usernameRef,\r\n        label: \"login\",\r\n        required: true,\r\n      },\r\n      password: {\r\n        id: \"password\",\r\n        type: \"password\",\r\n        ref: passwordRef,\r\n        label: \"password\",\r\n        required: true,\r\n      },\r\n      \"password-confirm\": {\r\n        id: \"password-confirm\",\r\n        type: \"password\",\r\n        ref: confirmPasswordRef,\r\n        label: \"confirm password\",\r\n        required: true,\r\n      },\r\n      \"e-mail\": {\r\n        id: \"email\",\r\n        type: \"email\",\r\n        ref: emailRef,\r\n        label: \"e-mail\",\r\n        required: true,\r\n      },\r\n    },\r\n    allIds: [\"login\", \"e-mail\", \"password\", \"password-confirm\"],\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    setLoadingState(LOADING_STATE.PENDING);\r\n\r\n    const registerData = {\r\n      username: usernameRef.current.value,\r\n      password1: passwordRef.current.value,\r\n      password2: confirmPasswordRef.current.value,\r\n      email: emailRef.current.value,\r\n    };\r\n\r\n    const { message } = await register(registerData);\r\n    if (message.status !== 200) {\r\n      e.target[4].value = null;\r\n      e.target[6].value = null;\r\n    }\r\n\r\n\r\n    toggleAnimation(setAnimateMessage)(() => setMessage(message));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Fade in={animate}>\r\n        <form method=\"post\" name=\"register\" onSubmit={(e) => submitHandler(e)}>\r\n          <Form form={registerForm}>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              Register\r\n            </Button>\r\n          </Form>\r\n        </form>\r\n      </Fade>\r\n      <Fade in={animateMessage}>\r\n        <Box>\r\n          <Message type={message.type}>{message.texts}</Message>\r\n        </Box>\r\n      </Fade>\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthSelection\\index.js",["231","232","233"],"import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport classes from \"../styles.module.css\";\r\nimport { Button } from \"../../../mui/themes\";\r\nimport { Frame } from \"../../Frame\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\n\r\nexport const AuthSelection = (props) => {\r\n  const [animate, setAnimate] = useState(false);\r\n\r\n  React.useEffect(() => {\r\n    !animate && props.toggleAnimation(setAnimate)();\r\n  }, [animate]);\r\n\r\n  return (\r\n    <Fade in={animate}>\r\n      <Box>\r\n        <Frame className={classes.authSelection}>\r\n          <Box className={classes.textWrapper}>\r\n            <Typography variant=\"subtitle1\" component=\"p\">\r\n              Войдите в систему или зарегистрируйтесь:\r\n            </Typography>\r\n          </Box>\r\n          <Box>\r\n            <NavLink className={classes.buttonWrapper} to=\"/auth/login\">\r\n              <Button variant=\"contained\" color=\"green\">\r\n                Вход\r\n              </Button>\r\n            </NavLink>\r\n            <NavLink className={classes.buttonWrapper} to=\"/auth/register\">\r\n              <Button variant=\"contained\" color=\"orange\">\r\n                Регистрация\r\n              </Button>\r\n            </NavLink>\r\n          </Box>\r\n        </Frame>\r\n      </Box>\r\n    </Fade>\r\n  );\r\n};\r\n","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\vars\\paths.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\templatePage\\index.js",["234"],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\TemplatePage\\index.js",["235","236"],"import React, { useEffect, useState } from \"react\";\r\nimport { Header } from \"../../components/Header\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport classes from \"./styles.module.css\";\r\nimport { Footer } from \"../../components/Footer\";\r\nimport { paths } from \"../../vars/paths\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  AnimationContext,\r\n  defaultAnimationContextValue,\r\n} from \"../contexts/AnimationContext\";\r\nimport { ANIMATION_SPEED } from \"../../vars/consts\";\r\nimport { selectCurrentUser } from \"../../features/auth/selectors\";\r\nimport { setCurrentUser } from \"../../features/auth\";\r\nimport { getUser } from \"../../api/auth\";\r\nimport { useFetchData } from \"../../features/hooks/useFetchData\";\r\n\r\nexport const TemplatePage = (props) => {\r\n  const headerItems = [\r\n      { name: \"home\", path: \"/\" },\r\n      { name: \"games\", path: paths.gamesPage },\r\n    ],\r\n    headerProps = {\r\n      menuLinks: headerItems,\r\n      user: useSelector((state) => selectCurrentUser(state)),\r\n    };\r\n\r\n  useFetchData(getUser, setCurrentUser);\r\n\r\n  const [animationContext, setAnimationContext] = useState({\r\n    animationContextValue: {\r\n      ...defaultAnimationContextValue,\r\n      toggleAnimation: defaultAnimationContextValue.toggleAnimation(\r\n        ANIMATION_SPEED.QUICK\r\n      ),\r\n    },\r\n    setAnimationContext: () => {},\r\n  });\r\n\r\n  return (\r\n    <AnimationContext.Provider\r\n      value={{\r\n        ...animationContext,\r\n        setAnimationContextValue: (animationContextValue) =>\r\n          setAnimationContext({\r\n            ...animationContext,\r\n            animationContextValue: animationContextValue,\r\n          }),\r\n      }}\r\n    >\r\n      <Box>\r\n        <Header {...headerProps} />\r\n        <main className={`${classes.outerWrapper} background_secondary`}>\r\n          <Box className={`${classes.innerWrapper}`}>{props.children}</Box>\r\n        </main>\r\n        <Footer />\r\n      </Box>\r\n    </AnimationContext.Provider>\r\n  );\r\n};","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Form\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Frame\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\MainPage\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Footer\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\GamesPage\\index.js",["237"],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\GamesSelector\\index.js",["238"],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\GamesPage\\GameItemPage\\index.js",["239","240"],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\vars\\consts.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\Game\\index.js",["241"],"import React, {useEffect, useState} from \"react\";\r\nimport classes from \"./styles.module.css\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { GAME_TYPES, PAGE_STATE } from \"../../vars/consts\";\r\nimport { WordSet } from \"./WordSet\";\r\nimport { PictureSet } from \"./PictureSet\";\r\nimport { Stepper } from \"../../components/Stepper\";\r\nimport { IconButton } from \"../../mui/themes\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport {selectAllSets, selectSetByIdx} from \"../../features/game/selectors\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AnimationContext } from \"../../pages/contexts/AnimationContext\";\r\nimport { Proceed } from \"../../components/Proceed\";\r\nimport { selectPageState } from \"../../features/pageState/selectors\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\n\r\nexport const Game = ({ item, clickBackHandler }) => {\r\n  const [currentSetIdx, setCurrentSetIdx] = useState(0),\r\n    sets = useSelector((state) => selectAllSets(state)),\r\n    set = useSelector((state) => selectSetByIdx(state, currentSetIdx)) || {},\r\n    [animate, setAnimate] = useState(true),\r\n    pageState = useSelector(selectPageState);\r\n\r\n  const SetTypes = {\r\n    [GAME_TYPES.WORDS]: <WordSet animate={animate} set={set} inConstructorMode={true}/>,\r\n    [GAME_TYPES.PICTURES]: <PictureSet animate={animate} set={set} maxItems={12} inConstructorMode={true}/>,\r\n  };\r\n\r\n  const [stepForward, stepBackward] = [\r\n    () => {\r\n      setCurrentSetIdx((prevActiveStep) => prevActiveStep + 1);\r\n    },\r\n    () => {\r\n      setCurrentSetIdx((prevActiveStep) => prevActiveStep - 1);\r\n    },\r\n  ];\r\n\r\n\r\n  return (\r\n    <>\r\n      <AnimationContext.Consumer>\r\n        {(animations) => {\r\n          const {\r\n            toggleGamePageAnimation,\r\n            toggleAnimation,\r\n          } = animations.animationContextValue;\r\n\r\n          return (\r\n            <section className={`${classes.gameWrapper}`}>\r\n              <Box className={`gridElement ${classes.s1}`}>\r\n                <Grow in={animate}>\r\n                  <Box>\r\n                    <Typography variant=\"h4\" component=\"h1\">\r\n                      {set.name}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" component=\"span\">\r\n                      {set.description}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" component=\"span\">\r\n                      type: {set.type}\r\n                    </Typography>\r\n                  </Box>\r\n                </Grow>\r\n                <IconButton\r\n                  onClick={() => toggleGamePageAnimation(clickBackHandler)}\r\n                  className={classes.returnButton}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  <ArrowBackIcon />\r\n                </IconButton>\r\n              </Box>\r\n              <Box className={`gridElement`}>{SetTypes[set.type]}</Box>\r\n              <Box className={classes.nav}>\r\n                <Stepper\r\n                  length={sets.length}\r\n                  stepForward={() => toggleAnimation(setAnimate)(stepForward)}\r\n                  stepBackward={() => toggleAnimation(setAnimate)(stepBackward)}\r\n                />\r\n              </Box>\r\n            </section>\r\n          );\r\n        }}\r\n      </AnimationContext.Consumer>\r\n      {pageState === PAGE_STATE.LOADING && <Proceed wrapper={\"main\"} />}\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Proceed\\index.js",["242"],"import React, {useEffect, useState} from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport {createPortal} from \"react-dom\";\r\n\r\n\r\nexport const Proceed = ({ className = 'root-portal', el = 'div', wrapper=\"main\"}) => {\r\n\tconst [container] = useState(document.createElement(el))\r\n\r\n\tcontainer.classList.add(className)\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.querySelector(wrapper).appendChild(container)\r\n\t\treturn () => {\r\n\t\t\tdocument.querySelector(wrapper).removeChild(container)\r\n\t\t}\r\n\t}, [])\r\n\r\n\treturn createPortal(\r\n\t\t<Loader\r\n\t\t\ttype=\"ThreeDots\"\r\n\t\t\tcolor=\"#FFF\"\r\n\t\t\theight={\"20vh\"}\r\n\t\t\twidth={\"20vh\"}\r\n\t\t/>, container\r\n\t)\r\n}","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\Game\\WordSet\\index.js",["243"],"import React from 'react';\r\nimport classes from '../styles.module.css';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {makeSelectSetItems} from \"../../../features/game/selectors\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport const WordSet = ({setId}) => {\r\n\tconst selectedSetItems = React.useMemo(makeSelectSetItems, []),\r\n\t\titems = useSelector(state => selectedSetItems(state, setId));\r\n\r\n\treturn (\r\n\t\t<Box className={classes.setWrapper}>\r\n\t\t\tWORD\r\n\t\t</Box>\r\n\t)\r\n}","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\Game\\PictureSet\\index.js",["244"],"import React, { useEffect, useState } from \"react\";\r\nimport classes from \"../styles.module.css\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Button } from \"../../../mui/themes\";\r\nimport {\r\n  makeSelectItemsPosition,\r\n  makeSelectSetItems,\r\n} from \"../../../features/game/selectors\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ITEM_TYPES, PLACEHOLDER_IMG } from \"../../../vars/consts\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { addWord } from \"../../../features/game\";\r\nimport { GameContext } from \"../../../pages/contexts/GameContext\";\r\nimport { ItemPlaceholder } from \"../../../components/ItemPlaceholder\";\r\n\r\nexport const PictureSet = ({ set, animate, maxItems, inConstructorMode }) => {\r\n  const selectedSetItems = React.useMemo(makeSelectSetItems, []),\r\n    selectItemsPosition = React.useMemo(makeSelectItemsPosition, []),\r\n    { picturesOrder, wordsOrder } = useSelector((state) =>\r\n      selectItemsPosition(state, set.id)\r\n    ),\r\n    items = useSelector((state) => selectedSetItems(state, set.id)),\r\n    [selectedItem, setSelectedItem] = useState(null),\r\n    itemClickHandler = (event) => {\r\n      setSelectedItem(event.currentTarget.id);\r\n    },\r\n    dispatch = useDispatch();\r\n\r\n  const dropSelection = !items.find((item) => item.id === selectedItem);\r\n\r\n  useEffect(() => {\r\n    dropSelection && setSelectedItem(\"add-item\");\r\n  }, [dropSelection]);\r\n\r\n  return (\r\n    <GameContext.Consumer>\r\n      {(gameContext) => {\r\n        const { setGameContextValue, gameContextValue } = gameContext;\r\n\r\n        setGameContextValue({\r\n          ...gameContextValue,\r\n          setId: set.id,\r\n          itemId: selectedItem,\r\n        });\r\n\r\n        return (\r\n          <Box className={classes.pictureSet}>\r\n            <Grow in={animate}>\r\n              <Box className={classes.pictures}>\r\n                {picturesOrder.map((item, idx) => {\r\n                  const word = (() => {\r\n                      const item = items.find((e) => e.id === set.results[idx]);\r\n\r\n                      return !!item && item.word;\r\n                    })(),\r\n                    handleAddWord = (itemId) =>\r\n                      dispatch(\r\n                        addWord({\r\n                          itemId: itemId,\r\n                          position: idx,\r\n                          setId: set.id,\r\n                        })\r\n                      );\r\n\r\n                  return (\r\n                    <Picture\r\n                      handlers={{\r\n                        handleRadioCheck: itemClickHandler,\r\n                        handleAddWord,\r\n                      }}\r\n                      key={item.id}\r\n                      item={item}\r\n                      word={word}\r\n                      selected={item.id === selectedItem}\r\n                      disabled={!gameContextValue.controlsAccess}\r\n                    />\r\n                  );\r\n                })}\r\n                {gameContextValue.controlsAccess && (\r\n                  <ItemPlaceholder\r\n                    clickHandler={itemClickHandler}\r\n                    key={\"add-item\"}\r\n                    selected={\"add-item\" === selectedItem}\r\n                  />\r\n                )}\r\n              </Box>\r\n            </Grow>\r\n            <Grow in={animate}>\r\n              <Box className={classes.words}>\r\n                {wordsOrder.map((item) => {\r\n                  return (\r\n                    <Word\r\n                      key={item.id}\r\n                      item={item}\r\n                      selected={item.id === selectedItem}\r\n                    />\r\n                  );\r\n                })}\r\n              </Box>\r\n            </Grow>\r\n            <Box className={classes.setControls}>\r\n              <Button\r\n                className={classes.completeButton}\r\n                variant=\"contained\"\r\n                color=\"green\"\r\n              >\r\n                Выполнить\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        );\r\n      }}\r\n    </GameContext.Consumer>\r\n  );\r\n};\r\n\r\nconst Picture = React.memo(\r\n  ({ item, handlers, word, selected, disabled, isDone, isCorrect }) => {\r\n    const [collectedProps, drop] = useDrop({\r\n      accept: ITEM_TYPES.WORD,\r\n      drop: (dragObject) => {\r\n        handlers.handleAddWord(dragObject.id);\r\n      },\r\n      collect: (monitor) => ({\r\n        isOver: !!monitor.isOver(),\r\n        style: {\r\n          background: !!monitor.isOver() && \"var(--secondary-bg-color-darken)\",\r\n        },\r\n      }),\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <input\r\n          onChangeCapture={handlers.handleRadioCheck}\r\n          type=\"radio\"\r\n          id={item.id}\r\n          name=\"pictures\"\r\n          value={item.id}\r\n          checked={selected}\r\n          disabled={disabled}\r\n        />\r\n        <label className={classes.itemWrapper} htmlFor={item.id}>\r\n          <Box className={classes.imageWrapper}>\r\n            <img {...[item.image.src ? item.image : PLACEHOLDER_IMG][0]} />\r\n          </Box>\r\n          <Box\r\n            ref={drop}\r\n            {...collectedProps}\r\n            className={`${classes.word}`}\r\n            onDoubleClick={() => handlers.handleAddWord(null)}\r\n          >\r\n            {word ? (\r\n              <Tooltip title={word} aria-label={word}>\r\n                <Typography\r\n                  className={`${classes.wordInner}`}\r\n                  variant=\"body1\"\r\n                  component=\"span\"\r\n                >\r\n                  {word}\r\n                </Typography>\r\n              </Tooltip>\r\n            ) : (\r\n              <Typography\r\n                className={`${classes.wordInner}`}\r\n                variant=\"body1\"\r\n                component=\"span\"\r\n              >\r\n                {word}\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n          {isDone && (\r\n            <Box\r\n              className={`${classes.doneOverlay} ${\r\n                isCorrect\r\n                  ? classes.doneOverlay__correct\r\n                  : classes.doneOverlay__incorrect\r\n              }`}\r\n            />\r\n          )}\r\n        </label>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nconst Word = React.memo(({ item, selected }) => {\r\n  const labelClasses = selected\r\n    ? `${classes.item} ${classes.item__selected} ${classes.word} ${classes.word__animateIn}`\r\n    : `${classes.item} ${classes.word} ${classes.word__animateIn}`;\r\n\r\n  const { id, word } = item;\r\n  const [collectedProps, drag] = useDrag({\r\n    item: {\r\n      id,\r\n      word,\r\n      type: ITEM_TYPES.WORD,\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n      animate: monitor.isDragging()\r\n        ? classes.word__animateOut\r\n        : classes.word__animateIn,\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <label\r\n      ref={drag}\r\n      htmlFor={id}\r\n      {...collectedProps}\r\n      className={`${labelClasses} ${collectedProps.animate}`}\r\n    >\r\n      <Tooltip title={item.word} aria-label={item.word}>\r\n        <Typography\r\n          className={classes.wordContent}\r\n          variant=\"body1\"\r\n          component=\"span\"\r\n        >\r\n          {word}\r\n        </Typography>\r\n      </Tooltip>\r\n    </label>\r\n  );\r\n});\r\n","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\GamesSelector\\ItemSeletor.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\Game\\Constructor\\index.js",["245","246","247","248","249"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport classes from \"../styles.module.css\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { IconButton } from \"../../../mui/themes\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { PAGE_STATE, PLACEHOLDER_IMG } from \"../../../vars/consts\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectPageState } from \"../../../features/pageState/selectors\";\r\nimport { GameContext } from \"../../../pages/contexts/GameContext\";\r\nimport { selectItem, selectSetById } from \"../../../features/game/selectors\";\r\nimport { Add, Shuffle } from \"@material-ui/icons\";\r\nimport { selectInstanceById } from \"../../../features/gameInstances/selectors\";\r\nimport { cloneDeep } from \"lodash\";\r\n\r\nconst offsetTop = (x) => {\r\n  return { marginTop: x };\r\n};\r\n\r\nexport const Constructor = ({ taskId }) => {\r\n  const gameState = useSelector(selectPageState);\r\n\r\n  return (\r\n    <GameContext.Consumer>\r\n      {(gameContext) => {\r\n        const { setId, itemId } = gameContext.gameContextValue;\r\n\r\n        return gameState === PAGE_STATE.PREPARING ? (\r\n          <Box className={`gridElement ${classes.forms}`}>\r\n            <TaskControlsForm itemId={taskId} />\r\n          </Box>\r\n        ) : (\r\n          <>\r\n            <Box className={`gridElement ${classes.forms}`}>\r\n              <SetControlsForm setId={setId} />\r\n              <ItemChangeForm itemId={itemId} />\r\n            </Box>\r\n            <Box>\r\n              <IconButton\r\n                className={classes.addSetButton}\r\n                variant=\"contained\"\r\n                color=\"green\"\r\n              >\r\n                <Add style={{ fontSize: \"3rem\" }} />\r\n              </IconButton>\r\n            </Box>\r\n          </>\r\n        );\r\n      }}\r\n    </GameContext.Consumer>\r\n  );\r\n};\r\n\r\nconst makeHandleTextFieldChange = (formState, setFormState) => (event) => {\r\n  const newState = cloneDeep(formState);\r\n\r\n  switch (event.target.getAttribute(\"data-value\")) {\r\n    case \"name\": {\r\n      newState.name = event.target.value;\r\n      setFormState(newState);\r\n      return;\r\n    }\r\n    case \"description\": {\r\n      newState.description = event.target.value;\r\n      setFormState(newState);\r\n      return;\r\n    }\r\n    case \"image\": {\r\n      newState.image.src = event.target.value;\r\n      setFormState(newState);\r\n      return;\r\n    }\r\n    case \"word\": {\r\n      newState.word = event.target.value;\r\n      setFormState(newState);\r\n      return;\r\n    }\r\n    default: {\r\n      return;\r\n    }\r\n  }\r\n};\r\n\r\nconst TaskControlsForm = ({ itemId }) => {\r\n  const gameInstance = useSelector((state) =>\r\n      selectInstanceById(state, itemId)\r\n    ),\r\n    [formState, setFormState] = useState({\r\n      name: gameInstance ? gameInstance.name : \"\",\r\n      description: gameInstance ? gameInstance.description : \"\",\r\n      type: \"\",\r\n    });\r\n\r\n  useEffect(() => {\r\n    setFormState({\r\n      name: gameInstance ? gameInstance.name : \"\",\r\n      description: gameInstance ? gameInstance.description : \"\",\r\n      type: \"\",\r\n    });\r\n  }, [itemId]);\r\n\r\n  const handleTextFieldChange = makeHandleTextFieldChange(\r\n    formState,\r\n    setFormState\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        className={classes.asideChangeForm}\r\n        onChange={handleTextFieldChange}\r\n        component=\"form\"\r\n      >\r\n        <Typography variant=\"body1\" component=\"span\">\r\n          {\"Игра: \"}\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"span\">\r\n          {gameInstance.name}\r\n        </Typography>\r\n        <TextField\r\n          style={offsetTop(\"5px\")}\r\n          className={`${classes.inputField}`}\r\n          label=\"Name\"\r\n          value={formState.name}\r\n          inputProps={{ \"data-value\": \"name\" }}\r\n          multiline={true}\r\n          spellCheck={false}\r\n        />\r\n        <TextField\r\n          style={offsetTop(\"5px\")}\r\n          className={`${classes.inputField} ${classes.offsetTop1X}`}\r\n          label=\"Description\"\r\n          value={formState.description}\r\n          multiline={true}\r\n          spellCheck={false}\r\n          inputProps={{ \"data-value\": \"description\" }}\r\n        />\r\n        <Box className={`${classes.offsetTop4X} ${classes.controls}`}>\r\n          <IconButton\r\n            className={classes.iconButton}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            <SaveIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.iconButton}\r\n            variant=\"contained\"\r\n            color=\"red\"\r\n          >\r\n            <DeleteForeverIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nconst SetControlsForm = ({ setId }) => {\r\n  const set = useSelector((state) => selectSetById(state, setId)),\r\n    [formState, setFormState] = useState({\r\n      name: set ? set.name : \"\",\r\n      description: set ? set.description : \"\",\r\n      type: \"\",\r\n    });\r\n\r\n  useEffect(() => {\r\n    setFormState({\r\n      name: set ? set.name : \"\",\r\n      description: set ? set.description : \"\",\r\n      type: \"\",\r\n    });\r\n  }, [setId]);\r\n\r\n  const handleTextFieldChange = makeHandleTextFieldChange(\r\n    formState,\r\n    setFormState\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        className={classes.asideChangeForm}\r\n        onChange={handleTextFieldChange}\r\n        component=\"form\"\r\n      >\r\n        <Typography variant=\"body1\" component=\"span\">\r\n          {\"Сет: \"}\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"span\">\r\n          {set && set.name}\r\n        </Typography>\r\n        <TextField\r\n          style={offsetTop(\"5px\")}\r\n          className={`${classes.inputField}`}\r\n          label=\"Name\"\r\n          value={formState.name}\r\n          inputProps={{ \"data-value\": \"name\" }}\r\n        />\r\n        <TextField\r\n          style={offsetTop(\"5px\")}\r\n          className={`${classes.inputField} ${classes.offsetTop1X}`}\r\n          label=\"Description\"\r\n          value={formState.description}\r\n          multiline={true}\r\n          spellCheck={false}\r\n          inputProps={{ \"data-value\": \"description\" }}\r\n        />\r\n        <Box className={`${classes.offsetTop4X} ${classes.controls}`}>\r\n          <IconButton\r\n            className={classes.iconButton}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            <SaveIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.iconButton}\r\n            variant=\"contained\"\r\n            color=\"orange\"\r\n          >\r\n            <Shuffle />\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.iconButton}\r\n            variant=\"contained\"\r\n            color=\"red\"\r\n          >\r\n            <DeleteForeverIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ItemChangeForm = ({ itemId }) => {\r\n  const item = useSelector((state) => selectItem(state, itemId)),\r\n    [type, setType] = useState(\"10\"),\r\n    [formState, setFormState] = useState({\r\n      image: PLACEHOLDER_IMG,\r\n      word: item ? item.word : \"\",\r\n      type: \"\",\r\n    }),\r\n    isAddItem = itemId === \"add-item\";\r\n\r\n  const handleTextFieldChange = makeHandleTextFieldChange(\r\n    formState,\r\n    setFormState\r\n  );\r\n\r\n  const handleTypeChange = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFormState({\r\n      image: item ? item.image : PLACEHOLDER_IMG,\r\n      word: item ? item.word : \"\",\r\n      type: \"\",\r\n    });\r\n  }, [itemId]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Box\r\n        className={classes.asideChangeForm}\r\n        onChange={handleTextFieldChange}\r\n        component=\"form\"\r\n      >\r\n        <Box className={classes.imageWrapper}>\r\n          <picture>\r\n            <img {...PLACEHOLDER_IMG} />\r\n            <img {...formState.image} />\r\n          </picture>\r\n        </Box>\r\n        <TextField\r\n          style={offsetTop(\"5px\")}\r\n          className={`${classes.inputField}`}\r\n          label=\"Image\"\r\n          value={formState.image !== PLACEHOLDER_IMG ? formState.image.src : \"\"}\r\n          inputProps={{ \"data-value\": \"image\" }}\r\n        />\r\n        <TextField\r\n          style={offsetTop(\"5px\")}\r\n          className={`${classes.inputField}`}\r\n          label=\"Word\"\r\n          value={formState.word}\r\n          inputProps={{ \"data-value\": \"word\" }}\r\n        />\r\n        <Box className={`${classes.selectorWrapper} ${classes.offsetTop2X}`}>\r\n          <InputLabel id=\"type-selector\" shrink>\r\n            Type\r\n          </InputLabel>\r\n          <Select\r\n            className={classes.typeSelector}\r\n            labelId=\"type-selector\"\r\n            value={type}\r\n            onChange={handleTypeChange}\r\n            disabled\r\n          >\r\n            <MenuItem value={10}>All</MenuItem>\r\n          </Select>\r\n        </Box>\r\n        <Box className={`${classes.offsetTop4X} ${classes.controls}`}>\r\n          {isAddItem ? (\r\n            <IconButton\r\n              className={classes.iconButton}\r\n              variant=\"contained\"\r\n              color=\"green\"\r\n            >\r\n              <Add />\r\n            </IconButton>\r\n          ) : (\r\n            <IconButton\r\n              className={classes.iconButton}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              <SaveIcon />\r\n            </IconButton>\r\n          )}\r\n          <IconButton\r\n            className={classes.iconButton}\r\n            variant=\"contained\"\r\n            color=\"red\"\r\n            disabled={isAddItem}\r\n          >\r\n            <DeleteForeverIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n};\r\n","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Stepper\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\hooks\\useWindowDimensions\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\auth\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\gameInstances\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\game\\gameMiddleware.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\gameInstances\\selectors.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\auth\\selectors.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\game\\selectors.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\pageState\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\game\\index.js",["250","251","252","253","254","255"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport _ from \"lodash\";\r\nimport { getData, sendData } from \"./gameMiddleware\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { ITEM_STATUS } from \"../../constants\";\r\nimport { GAME_TYPES } from \"../../vars/consts\";\r\n\r\nconst initialState = {\r\n  sets: {\r\n    byIds: {\r\n      \"set-1\": {\r\n        id: \"set-1\",\r\n        name: \"Set 1\",\r\n        description: null,\r\n        type: GAME_TYPES.PICTURES,\r\n        results: [\"item-3\", null, \"item-2\", \"item-4\"],\r\n      },\r\n      \"set-2\": {\r\n        id: \"set-2\",\r\n        name: \"Set 2\",\r\n        description: null,\r\n        type: GAME_TYPES.PICTURES,\r\n        results: [],\r\n      },\r\n      \"set-3\": {\r\n        id: \"set-3\",\r\n        name: \"Set 3\",\r\n        description: null,\r\n        type: GAME_TYPES.PICTURES,\r\n        results: [],\r\n      },\r\n    },\r\n    allIds: [\"set-1\", \"set-2\", \"set-3\"],\r\n  },\r\n  items: {\r\n    byIds: {\r\n      \"item-1\": {\r\n        id: \"item-1\",\r\n        image: {\r\n          src:\r\n            \"https://res.cloudinary.com/grohealth/image/upload/f_auto,fl_lossy,q_auto/v1583920665/DCUK/Content/iStock-947314334-1000x600.jpg\",\r\n          alt: null,\r\n        },\r\n        word: \"sun\",\r\n        set: \"set-1\",\r\n        position: {picture:1, word:0},\r\n      },\r\n      \"item-2\": {\r\n        id: \"item-2\",\r\n        image: {\r\n          src:\r\n            \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/3e/March_evening._The_sun_fell_across_the_Ob_river.jpg/1200px-March_evening._The_sun_fell_across_the_Ob_river.jpg\",\r\n          alt: null,\r\n        },\r\n        word: \"river\",\r\n        set: \"set-1\",\r\n        position: {picture:0, word:2},\r\n      },\r\n      \"item-3\": {\r\n        id: \"item-3\",\r\n        image: {\r\n          src:\r\n            \"https://www.metoffice.gov.uk/binaries/content/gallery/metofficegovuk/hero-images/weather/cloud/cumulus-cloud.jpg\",\r\n          alt: null,\r\n        },\r\n        word: \"sky\",\r\n        set: \"set-1\",\r\n        position: {picture:3, word:1},\r\n      },\r\n      \"item-4\": {\r\n        id: \"item-4\",\r\n        image: {\r\n          src:\r\n            \"https://www.boisestatepublicradio.org/sites/idaho/files/201907/city_of_rocks.jpg\",\r\n          alt: null,\r\n        },\r\n        word: \"rock\",\r\n        set: \"set-1\",\r\n        position: {picture:1, word:3},\r\n      },\r\n    },\r\n    allIds: [\"item-1\", \"item-2\", \"item-3\", \"item-4\"],\r\n  },\r\n};\r\n\r\nexport const index = createSlice({\r\n  name: \"game\",\r\n  initialState,\r\n  reducers: {\r\n    addWord: (state, action) => {\r\n      const { setId, position, itemId } = action.payload;\r\n\r\n      state.sets.byIds[setId].results[position] = !!itemId ? state.items.byIds[itemId].id : null;\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addWord } = index.actions\r\n\r\nexport default index.reducer;\r\n","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\pageState\\selectors.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\contexts\\AnimationContext.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\contexts\\GameContext.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\ItemPlaceholder\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\CreateTaskDialog\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\AuthPage\\index.js",["256","257"],"import React, { useEffect, useState } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Redirect, Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport { paths } from \"../../vars/paths\";\r\nimport { AuthSelection } from \"../../components/Auth/AuthSelection\";\r\nimport { AuthRegister } from \"../../components/Auth/AuthRegister\";\r\nimport { AuthLogIn } from \"../../components/Auth/AuthLogIn\";\r\nimport classes from \"./styles.module.css\";\r\nimport { AnimationContext } from \"../contexts/AnimationContext\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectCurrentUser } from \"../../features/auth/selectors\";\r\n\r\nexport const AuthPage = (props) => {\r\n  const { url } = useRouteMatch(),\r\n    user = useSelector(selectCurrentUser);\r\n\r\n  return (\r\n    <AnimationContext.Consumer>\r\n      {(contextValue) => {\r\n        const { toggleAnimation } = contextValue.animationContextValue;\r\n\r\n        return (\r\n          <Box className=\"templateC\">\r\n            <section className={classes.authPage}>\r\n              <Switch>\r\n                {!user.id ? (\r\n                  <>\r\n                    <Route exact path={paths.auth}>\r\n                      <AuthSelection toggleAnimation={toggleAnimation} />\r\n                    </Route>\r\n                    <Route path={`${url}${paths.register}`}>\r\n                      <AuthRegister toggleAnimation={toggleAnimation} />\r\n                    </Route>\r\n                    <Route path={`${url}${paths.login}`}>\r\n                      <AuthLogIn toggleAnimation={toggleAnimation} />\r\n                    </Route>\r\n                  </>\r\n                ) : (\r\n                  <Redirect to={\"/\"} />\r\n                )}\r\n              </Switch>\r\n            </section>\r\n          </Box>\r\n        );\r\n      }}\r\n    </AnimationContext.Consumer>\r\n  );\r\n};","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\api\\auth\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\api\\routes.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\api\\auth\\requests.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Message\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\auth\\middleware.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\hooks\\useFetchData\\index.js",["258","259"],"import { useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const useFetchData = (request, actionCreator) => {\r\n  const [_, setDataReceived] = useState(false);\r\n  const [messages, setMessages] = useState(null)\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    (async () => {\r\n      const req = await request();\r\n      setMessages(req.message);\r\n      dispatch(actionCreator(req.data));\r\n      setDataReceived(true);\r\n    })();\r\n  }, []);\r\n\r\n  return messages\r\n};","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\api\\items\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\api\\items\\requests.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\api\\errorHandlers.js",[],{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","severity":1,"message":"265","line":4,"column":8,"nodeType":"266","messageId":"267","endLine":4,"endColumn":20},{"ruleId":"264","severity":1,"message":"268","line":5,"column":9,"nodeType":"266","messageId":"267","endLine":5,"endColumn":19},{"ruleId":"269","severity":1,"message":"270","line":25,"column":6,"nodeType":"271","endLine":25,"endColumn":8,"suggestions":"272"},{"ruleId":"264","severity":1,"message":"273","line":20,"column":6,"nodeType":"266","messageId":"267","endLine":20,"endColumn":18},{"ruleId":"269","severity":1,"message":"274","line":24,"column":6,"nodeType":"271","endLine":24,"endColumn":15,"suggestions":"275"},{"ruleId":"264","severity":1,"message":"276","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":26},{"ruleId":"264","severity":1,"message":"277","line":2,"column":19,"nodeType":"266","messageId":"267","endLine":2,"endColumn":32},{"ruleId":"269","severity":1,"message":"274","line":16,"column":6,"nodeType":"271","endLine":16,"endColumn":15,"suggestions":"278"},{"ruleId":"264","severity":1,"message":"279","line":5,"column":7,"nodeType":"266","messageId":"267","endLine":5,"endColumn":15},{"ruleId":"264","severity":1,"message":"276","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":26},{"ruleId":"264","severity":1,"message":"280","line":7,"column":10,"nodeType":"266","messageId":"267","endLine":7,"endColumn":21},{"ruleId":"264","severity":1,"message":"276","line":1,"column":16,"nodeType":"266","messageId":"267","endLine":1,"endColumn":25},{"ruleId":"269","severity":1,"message":"281","line":21,"column":6,"nodeType":"271","endLine":21,"endColumn":8,"suggestions":"282"},{"ruleId":"264","severity":1,"message":"276","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":26},{"ruleId":"264","severity":1,"message":"283","line":1,"column":28,"nodeType":"266","messageId":"267","endLine":1,"endColumn":34},{"ruleId":"264","severity":1,"message":"276","line":1,"column":16,"nodeType":"266","messageId":"267","endLine":1,"endColumn":25},{"ruleId":"269","severity":1,"message":"284","line":16,"column":5,"nodeType":"271","endLine":16,"endColumn":7,"suggestions":"285"},{"ruleId":"264","severity":1,"message":"286","line":9,"column":3,"nodeType":"266","messageId":"267","endLine":9,"endColumn":8},{"ruleId":"287","severity":1,"message":"288","line":148,"column":13,"nodeType":"289","endLine":148,"endColumn":76},{"ruleId":"269","severity":1,"message":"290","line":105,"column":6,"nodeType":"271","endLine":105,"endColumn":14,"suggestions":"291"},{"ruleId":"269","severity":1,"message":"292","line":178,"column":6,"nodeType":"271","endLine":178,"endColumn":13,"suggestions":"293"},{"ruleId":"269","severity":1,"message":"294","line":267,"column":6,"nodeType":"271","endLine":267,"endColumn":14,"suggestions":"295"},{"ruleId":"287","severity":1,"message":"288","line":278,"column":13,"nodeType":"289","endLine":278,"endColumn":41},{"ruleId":"287","severity":1,"message":"288","line":279,"column":13,"nodeType":"289","endLine":279,"endColumn":41},{"ruleId":"264","severity":1,"message":"296","line":2,"column":8,"nodeType":"266","messageId":"267","endLine":2,"endColumn":13},{"ruleId":"264","severity":1,"message":"297","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":9},{"ruleId":"264","severity":1,"message":"298","line":4,"column":10,"nodeType":"266","messageId":"267","endLine":4,"endColumn":17},{"ruleId":"264","severity":1,"message":"299","line":4,"column":19,"nodeType":"266","messageId":"267","endLine":4,"endColumn":27},{"ruleId":"264","severity":1,"message":"300","line":5,"column":10,"nodeType":"266","messageId":"267","endLine":5,"endColumn":16},{"ruleId":"264","severity":1,"message":"301","line":6,"column":10,"nodeType":"266","messageId":"267","endLine":6,"endColumn":21},{"ruleId":"264","severity":1,"message":"276","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":26},{"ruleId":"264","severity":1,"message":"302","line":1,"column":28,"nodeType":"266","messageId":"267","endLine":1,"endColumn":36},{"ruleId":"264","severity":1,"message":"303","line":5,"column":10,"nodeType":"266","messageId":"267","endLine":5,"endColumn":11},{"ruleId":"269","severity":1,"message":"304","line":16,"column":6,"nodeType":"271","endLine":16,"endColumn":8,"suggestions":"305"},"no-native-reassign",["306"],"no-negated-in-lhs",["307"],"no-unused-vars","'muiTextField' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'animate' and 'toggleAnimation'. Either include them or remove the dependency array.","ArrayExpression",["308"],"'loadingState' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["309"],"'useEffect' is defined but never used.","'useRouteMatch' is defined but never used.",["310"],"'testData' is assigned a value but never used.","'useDispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'animationSpeed'. Either include it or remove the dependency array.",["311"],"'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'container' and 'wrapper'. Either include them or remove the dependency array.",["312"],"'items' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'gameInstance'. Either include it or remove the dependency array.",["313"],"React Hook useEffect has a missing dependency: 'set'. Either include it or remove the dependency array.",["314"],"React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array.",["315"],"'axios' is defined but never used.","'_' is defined but never used.","'getData' is defined but never used.","'sendData' is defined but never used.","'nanoid' is defined but never used.","'ITEM_STATUS' is defined but never used.","'useState' is defined but never used.","'_' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'actionCreator', 'dispatch', and 'request'. Either include them or remove the dependency array. If 'request' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["316"],"no-global-assign","no-unsafe-negation",{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"319","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},"Update the dependencies array to be: [animate, toggleAnimation]",{"range":"334","text":"335"},"Update the dependencies array to be: [animate, props]",{"range":"336","text":"337"},{"range":"338","text":"337"},"Update the dependencies array to be: [animationSpeed]",{"range":"339","text":"340"},"Update the dependencies array to be: [container, wrapper]",{"range":"341","text":"342"},"Update the dependencies array to be: [gameInstance, itemId]",{"range":"343","text":"344"},"Update the dependencies array to be: [set, setId]",{"range":"345","text":"346"},"Update the dependencies array to be: [item, itemId]",{"range":"347","text":"348"},"Update the dependencies array to be: [actionCreator, dispatch, request]",{"range":"349","text":"350"},[1043,1045],"[animate, toggleAnimation]",[927,936],"[animate, props]",[570,579],[868,870],"[animationSpeed]",[492,494],"[container, wrapper]",[3367,3375],"[gameInstance, itemId]",[5379,5386],"[set, setId]",[7773,7781],"[item, itemId]",[485,487],"[actionCreator, dispatch, request]"]