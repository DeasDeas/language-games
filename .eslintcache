[{"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\index.js":"1","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\reportWebVitals.js":"2","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\app\\store.js":"3","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\PictureCard\\PictureCard.js":"4","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\App\\App.js":"5","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Button\\Button.js":"6","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\UserPanel\\UserPanel.js":"7","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\Header.js":"8","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthSelection\\AuthSelection.js":"9","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthLogIn\\AuthLogIn.js":"10","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthRegister\\AuthRegister.js":"11","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\auth\\authSlice.js":"12","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\UserPanel\\UserWindow\\UserWindow.js":"13","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Frame\\Frame.js":"14","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\MainMenu\\MainMenu.js":"15","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\MainMenu\\MenuItem\\MenuItem.js":"16","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\task\\taskSlice.js":"17","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\game\\gameSlice.js":"18","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Panel\\Panel.js":"19","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\SetCard\\SetCard.js":"20","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\WordCard\\WordCard.js":"21","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\constants.js":"22","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\GameManager\\GameManager.js":"23","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\GameWrapper\\GameWrapper.js":"24","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\Nav\\Nav.js":"25","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Modal\\AddPictureModal\\AddPictureModal.js":"26","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Modal\\ChangePictureModal\\ChangePictureModal.js":"27","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\thunks\\gameMiddleware.js":"28","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\mui\\themes.js":"29","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Form\\Form.js":"30"},{"size":636,"mtime":1614256347013,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":342,"mtime":1614186152249,"results":"34","hashOfConfig":"32"},{"size":2852,"mtime":1614429031251,"results":"35","hashOfConfig":"32"},{"size":2301,"mtime":1614275404546,"results":"36","hashOfConfig":"32"},{"size":397,"mtime":1613833832842,"results":"37","hashOfConfig":"32"},{"size":772,"mtime":1614562358635,"results":"38","hashOfConfig":"32"},{"size":406,"mtime":1613834146129,"results":"39","hashOfConfig":"32"},{"size":895,"mtime":1614274385634,"results":"40","hashOfConfig":"32"},{"size":1497,"mtime":1614284615100,"results":"41","hashOfConfig":"32"},{"size":2143,"mtime":1614284607588,"results":"42","hashOfConfig":"32"},{"size":2597,"mtime":1615367738626,"results":"43","hashOfConfig":"32"},{"size":1232,"mtime":1614278224639,"results":"44","hashOfConfig":"32"},{"size":283,"mtime":1614418790767,"results":"45","hashOfConfig":"32"},{"size":2105,"mtime":1615256380796,"results":"46","hashOfConfig":"32"},{"size":250,"mtime":1613833877063,"results":"47","hashOfConfig":"32"},{"size":1588,"mtime":1613835533500,"results":"48","hashOfConfig":"32"},{"size":7305,"mtime":1615130205747,"results":"49","hashOfConfig":"32"},{"size":254,"mtime":1613833716196,"results":"50","hashOfConfig":"32"},{"size":2941,"mtime":1615077826435,"results":"51","hashOfConfig":"32"},{"size":852,"mtime":1614430886427,"results":"52","hashOfConfig":"32"},{"size":163,"mtime":1614429031384,"results":"53","hashOfConfig":"32"},{"size":4225,"mtime":1615078881532,"results":"54","hashOfConfig":"32"},{"size":3737,"mtime":1614419720338,"results":"55","hashOfConfig":"32"},{"size":451,"mtime":1613834349795,"results":"56","hashOfConfig":"32"},{"size":3400,"mtime":1615131592477,"results":"57","hashOfConfig":"32"},{"size":3977,"mtime":1614350890252,"results":"58","hashOfConfig":"32"},{"size":3235,"mtime":1615129038148,"results":"59","hashOfConfig":"32"},{"size":2081,"mtime":1614414983296,"results":"60","hashOfConfig":"32"},{"size":1199,"mtime":1614274374860,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1dkrs64",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\index.js",[],["126","127"],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\reportWebVitals.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\app\\store.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\PictureCard\\PictureCard.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\App\\App.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Button\\Button.js",[],["128","129"],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\UserPanel\\UserPanel.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\Header.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthSelection\\AuthSelection.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthLogIn\\AuthLogIn.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthRegister\\AuthRegister.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\auth\\authSlice.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\UserPanel\\UserWindow\\UserWindow.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Frame\\Frame.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\MainMenu\\MainMenu.js",["130","131","132"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport CreateOutlinedIcon from \"@material-ui/icons/CreateOutlined\";\r\nimport { MenuItem } from \"./MenuItem/MenuItem\";\r\nimport {\r\n  getUsersSessions,\r\n  getDefaultSessions,\r\n} from \"../../features/task/taskSlice\";\r\n\r\nimport classes from \"./MainMenu.module.css\";\r\nimport { Button } from \"../../mui/themes\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nexport const MainMenu = () => {\r\n  const dispatch = useDispatch();\r\n  const { userSessionStatus, defaultSessionStatus } = useSelector(\r\n    (state) => state.tasks\r\n  );\r\n  const sessions = useSelector((state) => state.tasks.sessions);\r\n  const currentUser = useSelector((state) => state.auth.user.pk);\r\n  const isAuthenticated = currentUser !== -1;\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    // defaultSessionStatus === \"idle\" && dispatch(getDefaultSessions());\r\n    isAuthenticated &&\r\n      userSessionStatus === \"idle\" &&\r\n      dispatch(getUsersSessions(currentUser));\r\n  }, []);\r\n\r\n  const handleItemClick = (session) => {\r\n    history.push(`/game/${session.id}`);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.MainMenuFrame} elevation={3}>\r\n      {sessions.map((session, idx) => {\r\n        return (\r\n          <div key={`menuItem${idx}`} className={classes.ItemWrapper}>\r\n            <button onClick={() => handleItemClick(session)}>\r\n              <MenuItem>\r\n                <span>{session.name}</span>\r\n              </MenuItem>\r\n            </button>\r\n            {isAuthenticated && <ChangeButton sessionId={session.id} />}\r\n          </div>\r\n        );\r\n      })}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst ChangeButton = (props) => {\r\n  const history = useHistory();\r\n  const handleItemChangeClick = (sessionId) => {\r\n    history.push(`game-constructor/${sessionId}`);\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"orange\"\r\n      onClick={() => handleItemChangeClick(props.sessionId)}\r\n    >\r\n      <CreateOutlinedIcon />\r\n    </Button>\r\n  );\r\n};\r\n","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\MainMenu\\MenuItem\\MenuItem.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\task\\taskSlice.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\game\\gameSlice.js",["133","134","135","136","137"],"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport { getData, sendData } from \"../thunks/gameMiddleware\";\nimport { nanoid } from \"nanoid\";\nimport { ITEM_STATUS } from \"../../constants\";\n\nconst initialState = {\n  session: null,\n  sets: {\n    byId: {},\n    allIds: [],\n  },\n  pictures: {\n    byId: {},\n    allIds: [],\n  },\n  dataStatus: \"idle\",\n  results: {\n    setId: [],\n  },\n  currentSet: 0,\n  addedSets: [],\n  deletedSets: [],\n  addedPictures: [],\n  changedPictures: [],\n  deletedPictures: [],\n};\n\nexport const gameSlice = createSlice({\n  name: \"game\",\n  initialState,\n  reducers: {\n    readGameState(state, action) {\n      state = {\n        ...state,\n        ...action.payload,\n      };\n      return state;\n    },\n    placeWord(state, action) {\n      const { setId, word, prevWord, position } = action.payload;\n\n      state.results[setId][position].word = word;\n      state.sets.byId[setId].wordsOrder = state.sets.byId[\n        setId\n      ].wordsOrder.filter((initialWord) => initialWord !== word);\n      prevWord && state.sets.byId[setId].wordsOrder.push(prevWord);\n\n      return state;\n    },\n    returnWord(state, action) {\n      const { setId, position, word } = action.payload;\n\n      state.results[setId][position].word = null;\n      word && state.sets.byId[setId].wordsOrder.push(word);\n\n      return state;\n    },\n    switchSet(state, action) {\n      const { direction, length } = action.payload;\n      let currentSet = state.currentSet;\n\n      switch (direction) {\n        case \"left\": {\n          currentSet > 0 && --state.currentSet;\n          break;\n        }\n        case \"right\": {\n          currentSet < length + 1 && ++state.currentSet;\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n\n      return state;\n    },\n    completeSet(state, action) {\n      const { setId, correctWords } = action.payload;\n\n      state.results[setId].forEach(\n        (item, idx) => (item.correct = item.word === correctWords[idx])\n      );\n      state.sets.byId[setId].completed = true;\n\n      return state;\n    },\n    redoSet(state, action) {\n      const setId = action.payload.setId;\n\n      state.results[setId].forEach((item) => {\n        item.word && state.sets.byId[setId].wordsOrder.push(item.word);\n        item.correct = null;\n        item.word = null;\n      });\n\n      state.sets.byId[setId].completed = false;\n      state.sets.byId[setId].wordsOrder = _.shuffle(\n        state.sets.byId[setId].wordsOrder\n      );\n      --state.sets.byId[setId].repeatable;\n\n      return state;\n    },\n    pictureAdded(state, action) {\n      const { setId, src, word, owner } = action.payload;\n\n      let newId = nanoid(5);\n      state.pictures.byId[newId] = {\n        id: newId,\n        src: src,\n        word: word,\n        set: setId,\n        owmer: owner,\n        theme: 1,\n        pos: state.sets.byId[setId].picturesOrder.length + 1,\n        status: ITEM_STATUS.ADDED,\n      };\n      state.pictures.allIds.push(newId);\n      state.sets.byId[setId].picturesOrder.push(newId);\n      state.results[setId].push({ word: word, correct: true });\n      state.addedPictures.push(newId);\n\n      return state;\n    },\n    pictureChanged(state, action) {\n      const { id, setId, src, word, owner } = action.payload;\n      const oldPicture = state.pictures.byId[id];\n\n      let isNew = !(oldPicture.word == word && oldPicture.src == src);\n\n      state.pictures.byId[id] = {\n        ...state.pictures.byId[id],\n        src: src,\n        word: word,\n      };\n\n      if (state.pictures.byId[id].status === ITEM_STATUS.INITIAL && isNew) {\n        state.changedPictures.push(id);\n        state.pictures.byId[id].status = ITEM_STATUS.CHANGED;\n      }\n\n      state.sets.byId[setId].wordsOrder = state.sets.byId[\n        setId\n      ].wordsOrder.filter((word) => oldPicture.word !== word);\n\n      state.results[setId][\n        state.sets.byId[setId].picturesOrder.findIndex((e) => e === id)\n      ] = { word: isNew ? word : null, correct: true };\n\n      return state;\n    },\n    pictureDeleted(state, action) {\n      const { id } = action.payload;\n      const { set: setId, word } = state.pictures.byId[id];\n      const { picturesOrder, wordsOrder } = state.sets.byId[setId];\n      const pictureIdx = picturesOrder.findIndex(\n        (pictureId) => pictureId === id\n      );\n      const status = state.pictures.byId[id].status;\n\n      picturesOrder.splice(pictureIdx, 1);\n      state.sets.byId[setId].wordsOrder = wordsOrder.filter(\n        (arrWord) => arrWord !== word\n      );\n\n      delete state.pictures.byId[id];\n      state.pictures.allIds = state.pictures.allIds.filter(\n        (pictureId) => pictureId !== id\n      );\n      state.results[setId].splice(pictureIdx, 1);\n\n      if (\n        status === ITEM_STATUS.INITIAL ||\n        status === ITEM_STATUS.CHANGED\n      ) {\n        state.deletedPictures.push(id);\n      }\n      if (status === ITEM_STATUS.ADDED) {\n        state.addedPictures = state.addedPictures.filter(\n          (picId) => picId !== id\n        );\n      }\n\n      return state;\n    },\n    setAdded(state) {\n      const MAX_SET_Q = 15;\n      if (state.sets.allIds.length >= MAX_SET_Q) {\n        return;\n      }\n\n      const newId = nanoid(5);\n      state.sets.allIds.push(newId);\n      state.sets.byId[newId] = {\n        id: newId,\n        name: newId,\n        repeatable: 1,\n        picturesOrder: [],\n        wordsOrder: [],\n        completed: false,\n        status: ITEM_STATUS.ADDED\n      };\n      state.results[newId] = [];\n      state.addedSets.push(newId);\n\n      return state;\n    },\n    setDeleted(state, action) {\n      const { id } = action.payload;\n      const status = state.sets.byId[id].status;\n      const setIdx = state.sets.allIds.findIndex(setId => setId === id)\n\n      if (state.sets.allIds.length == 1) {\n        return;\n      }\n\n      state.sets.allIds = state.sets.allIds.filter(setId => setId !== id);\n      delete state.sets.byId[id];\n\n      if(status === ITEM_STATUS.ADDED) {\n        state.addedSets = state.addedSets.filter(setId => setId !== id);\n      }\n      if(status === ITEM_STATUS.INITIAL) {\n        state.deletedSets.push(id);\n      }\n\n      if(state.currentSet >= setIdx) {\n        --state.currentSet\n      }\n\n      [state.addedPictures, state.deletedPictures, state.changedPictures].forEach(array => array.forEach((elem, idx, selfArr) => {\n        state.pictures.byId[elem].set === id && selfArr.splice(idx, 1);\n      }))\n\n      return state;\n    },\n  },\n  extraReducers: {\n    [getData.fulfilled]: (state, action) => {\n      state.dataStatus = \"succeeded\";\n      state.session = action.payload.session;\n      state.sets = action.payload.sets;\n      state.pictures = action.payload.pictures;\n      state.results = action.payload.results;\n\n      state.currentSet = 0;\n      state.addedSets = [];\n      state.deletedSets = [];\n      state.addedPictures = [];\n      state.changedPictures = [];\n      state.deletedPictures = [];\n\n      return state;\n    },\n    [sendData.fulfilled]: (state) => {\n      return state;\n    }\n  },\n});\n\nexport const {\n  readGameState,\n  placeWord,\n  returnWord,\n  switchSet,\n  completeSet,\n  redoSet,\n  setSecureStatus,\n  pictureAdded,\n  pictureChanged,\n  pictureDeleted,\n  setAdded,\n  setDeleted\n} = gameSlice.actions;\nexport default gameSlice.reducer;\n","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Panel\\Panel.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\SetCard\\SetCard.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\WordCard\\WordCard.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\constants.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\GameManager\\GameManager.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\GameWrapper\\GameWrapper.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\Nav\\Nav.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Modal\\AddPictureModal\\AddPictureModal.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Modal\\ChangePictureModal\\ChangePictureModal.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\thunks\\gameMiddleware.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\mui\\themes.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Form\\Form.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"138","replacedBy":"142"},{"ruleId":"140","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":9,"column":3,"nodeType":"146","messageId":"147","endLine":9,"endColumn":21},{"ruleId":"144","severity":1,"message":"148","line":18,"column":30,"nodeType":"146","messageId":"147","endLine":18,"endColumn":50},{"ruleId":"149","severity":1,"message":"150","line":31,"column":6,"nodeType":"151","endLine":31,"endColumn":8,"suggestions":"152"},{"ruleId":"144","severity":1,"message":"153","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":13},{"ruleId":"144","severity":1,"message":"154","line":129,"column":37,"nodeType":"146","messageId":"147","endLine":129,"endColumn":42},{"ruleId":"155","severity":1,"message":"156","line":132,"column":37,"nodeType":"157","messageId":"158","endLine":132,"endColumn":39},{"ruleId":"155","severity":1,"message":"156","line":132,"column":63,"nodeType":"157","messageId":"158","endLine":132,"endColumn":65},{"ruleId":"155","severity":1,"message":"156","line":216,"column":36,"nodeType":"157","messageId":"158","endLine":216,"endColumn":38},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],["159"],["160"],"no-unused-vars","'getDefaultSessions' is defined but never used.","Identifier","unusedVar","'defaultSessionStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser', 'dispatch', 'isAuthenticated', and 'userSessionStatus'. Either include them or remove the dependency array.","ArrayExpression",["161"],"'axios' is defined but never used.","'owner' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},"Update the dependencies array to be: [currentUser, dispatch, isAuthenticated, userSessionStatus]",{"range":"164","text":"165"},[1100,1102],"[currentUser, dispatch, isAuthenticated, userSessionStatus]"]