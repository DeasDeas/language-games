[{"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\index.js":"1","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\reportWebVitals.js":"2","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\app\\store.js":"3","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\App\\App.js":"4","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\auth\\authSlice.js":"5","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\task\\taskSlice.js":"6","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\game\\gameSlice.js":"7","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\constants.js":"8","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\thunks\\gameMiddleware.js":"9","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\mui\\themes.js":"10","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthLogIn\\index.js":"11","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthRegister\\index.js":"12","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthSelection\\index.js":"13","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\index.js":"14","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\vars\\paths.js":"15","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\index.js":"16","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\templatePage\\index.js":"17","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\TemplatePage\\index.js":"18","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Form\\index.js":"19","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Frame\\index.js":"20","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\MainPage\\index.js":"21","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Footer\\index.js":"22","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\GamesPage\\index.js":"23","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\GamesSelector\\index.js":"24","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\GamesPage\\GameItemPage\\index.js":"25","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\vars\\consts.js":"26","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\Game\\index.js":"27","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Proceed\\index.js":"28","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\Game\\WordSet\\index.js":"29","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\Game\\PictureSet\\index.js":"30","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\GamesSelector\\ItemSeletor.js":"31","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\Game\\Constructor\\index.js":"32","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Stepper\\index.js":"33","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\hooks\\useWindowDimensions\\index.js":"34"},{"size":789,"mtime":1616698630406,"results":"35","hashOfConfig":"36"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"36"},{"size":986,"mtime":1616698920720,"results":"38","hashOfConfig":"36"},{"size":1411,"mtime":1617180703838,"results":"39","hashOfConfig":"36"},{"size":2597,"mtime":1616699141573,"results":"40","hashOfConfig":"36"},{"size":1588,"mtime":1615425276908,"results":"41","hashOfConfig":"36"},{"size":7305,"mtime":1615130205747,"results":"42","hashOfConfig":"36"},{"size":163,"mtime":1614429031384,"results":"43","hashOfConfig":"36"},{"size":3235,"mtime":1615129038148,"results":"44","hashOfConfig":"36"},{"size":2293,"mtime":1617644870663,"results":"45","hashOfConfig":"36"},{"size":1492,"mtime":1616777709388,"results":"46","hashOfConfig":"36"},{"size":2138,"mtime":1616777709310,"results":"47","hashOfConfig":"36"},{"size":997,"mtime":1616836808471,"results":"48","hashOfConfig":"36"},{"size":531,"mtime":1616770855551,"results":"49","hashOfConfig":"36"},{"size":303,"mtime":1617188598540,"results":"50","hashOfConfig":"36"},{"size":2338,"mtime":1617536434710,"results":"51","hashOfConfig":"36"},{"size":510,"mtime":1616775153176,"results":"52","hashOfConfig":"36"},{"size":4521,"mtime":1617546160967,"results":"53","hashOfConfig":"36"},{"size":1215,"mtime":1616836808798,"results":"54","hashOfConfig":"36"},{"size":320,"mtime":1616778785639,"results":"55","hashOfConfig":"36"},{"size":2444,"mtime":1617284504851,"results":"56","hashOfConfig":"36"},{"size":296,"mtime":1616952777908,"results":"57","hashOfConfig":"36"},{"size":4583,"mtime":1617658595972,"results":"58","hashOfConfig":"36"},{"size":1978,"mtime":1617638635496,"results":"59","hashOfConfig":"36"},{"size":2751,"mtime":1617711600153,"results":"60","hashOfConfig":"36"},{"size":453,"mtime":1617649834610,"results":"61","hashOfConfig":"36"},{"size":1580,"mtime":1617662436474,"results":"62","hashOfConfig":"36"},{"size":632,"mtime":1617373581069,"results":"63","hashOfConfig":"36"},{"size":231,"mtime":1617384232822,"results":"64","hashOfConfig":"36"},{"size":2446,"mtime":1617711600075,"results":"65","hashOfConfig":"36"},{"size":1954,"mtime":1617638559648,"results":"66","hashOfConfig":"36"},{"size":3410,"mtime":1617711599906,"results":"67","hashOfConfig":"36"},{"size":1547,"mtime":1617657435560,"results":"68","hashOfConfig":"36"},{"size":582,"mtime":1617649290141,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1dkrs64",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\index.js",[],["148","149"],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\reportWebVitals.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\app\\store.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\App\\App.js",["150","151"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport { getUser } from \"../../features/auth/authSlice\";\r\n\r\nimport \"./styles.css\";\r\nimport { MuiThemeProvider } from \"@material-ui/core\";\r\nimport { mainTheme } from \"../../mui/themes\";\r\nimport { Auth } from \"../Auth\";\r\nimport { paths } from \"../../vars/paths\";\r\nimport {TemplatePage} from \"../../pages/TemplatePage\";\r\nimport {MainPage} from \"../../pages/MainPage\";\r\nimport {GamesPage} from \"../../pages/GamesPage\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const authCheckStatus = useSelector((state) => state.auth.status);\r\n  const isAuthenticated = useSelector((state) => state.auth.authenticated);\r\n\r\n  useEffect(() => {\r\n    authCheckStatus === \"idle\" && dispatch(getUser());\r\n  });\r\n\r\n  return (\r\n    <MuiThemeProvider theme={mainTheme}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <TemplatePage>\r\n          <Auth />\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <MainPage/>\r\n              </Route>\r\n              <Route path={paths.gamesPage}>\r\n\t              <GamesPage/>\r\n              </Route>\r\n            </Switch>\r\n          </TemplatePage>\r\n        </div>\r\n      </Router>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\auth\\authSlice.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\task\\taskSlice.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\game\\gameSlice.js",["152","153","154","155","156"],"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport { getData, sendData } from \"../thunks/gameMiddleware\";\nimport { nanoid } from \"nanoid\";\nimport { ITEM_STATUS } from \"../../constants\";\n\nconst initialState = {\n  session: null,\n  sets: {\n    byId: {},\n    allIds: [],\n  },\n  pictures: {\n    byId: {},\n    allIds: [],\n  },\n  dataStatus: \"idle\",\n  results: {\n    setId: [],\n  },\n  currentSet: 0,\n  addedSets: [],\n  deletedSets: [],\n  addedPictures: [],\n  changedPictures: [],\n  deletedPictures: [],\n};\n\nexport const gameSlice = createSlice({\n  name: \"game\",\n  initialState,\n  reducers: {\n    readGameState(state, action) {\n      state = {\n        ...state,\n        ...action.payload,\n      };\n      return state;\n    },\n    placeWord(state, action) {\n      const { setId, word, prevWord, position } = action.payload;\n\n      state.results[setId][position].word = word;\n      state.sets.byId[setId].wordsOrder = state.sets.byId[\n        setId\n      ].wordsOrder.filter((initialWord) => initialWord !== word);\n      prevWord && state.sets.byId[setId].wordsOrder.push(prevWord);\n\n      return state;\n    },\n    returnWord(state, action) {\n      const { setId, position, word } = action.payload;\n\n      state.results[setId][position].word = null;\n      word && state.sets.byId[setId].wordsOrder.push(word);\n\n      return state;\n    },\n    switchSet(state, action) {\n      const { direction, length } = action.payload;\n      let currentSet = state.currentSet;\n\n      switch (direction) {\n        case \"left\": {\n          currentSet > 0 && --state.currentSet;\n          break;\n        }\n        case \"right\": {\n          currentSet < length + 1 && ++state.currentSet;\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n\n      return state;\n    },\n    completeSet(state, action) {\n      const { setId, correctWords } = action.payload;\n\n      state.results[setId].forEach(\n        (item, idx) => (item.correct = item.word === correctWords[idx])\n      );\n      state.sets.byId[setId].completed = true;\n\n      return state;\n    },\n    redoSet(state, action) {\n      const setId = action.payload.setId;\n\n      state.results[setId].forEach((item) => {\n        item.word && state.sets.byId[setId].wordsOrder.push(item.word);\n        item.correct = null;\n        item.word = null;\n      });\n\n      state.sets.byId[setId].completed = false;\n      state.sets.byId[setId].wordsOrder = _.shuffle(\n        state.sets.byId[setId].wordsOrder\n      );\n      --state.sets.byId[setId].repeatable;\n\n      return state;\n    },\n    pictureAdded(state, action) {\n      const { setId, src, word, owner } = action.payload;\n\n      let newId = nanoid(5);\n      state.pictures.byId[newId] = {\n        id: newId,\n        src: src,\n        word: word,\n        set: setId,\n        owmer: owner,\n        theme: 1,\n        pos: state.sets.byId[setId].picturesOrder.length + 1,\n        status: ITEM_STATUS.ADDED,\n      };\n      state.pictures.allIds.push(newId);\n      state.sets.byId[setId].picturesOrder.push(newId);\n      state.results[setId].push({ word: word, correct: true });\n      state.addedPictures.push(newId);\n\n      return state;\n    },\n    pictureChanged(state, action) {\n      const { id, setId, src, word, owner } = action.payload;\n      const oldPicture = state.pictures.byId[id];\n\n      let isNew = !(oldPicture.word == word && oldPicture.src == src);\n\n      state.pictures.byId[id] = {\n        ...state.pictures.byId[id],\n        src: src,\n        word: word,\n      };\n\n      if (state.pictures.byId[id].status === ITEM_STATUS.INITIAL && isNew) {\n        state.changedPictures.push(id);\n        state.pictures.byId[id].status = ITEM_STATUS.CHANGED;\n      }\n\n      state.sets.byId[setId].wordsOrder = state.sets.byId[\n        setId\n      ].wordsOrder.filter((word) => oldPicture.word !== word);\n\n      state.results[setId][\n        state.sets.byId[setId].picturesOrder.findIndex((e) => e === id)\n      ] = { word: isNew ? word : null, correct: true };\n\n      return state;\n    },\n    pictureDeleted(state, action) {\n      const { id } = action.payload;\n      const { set: setId, word } = state.pictures.byId[id];\n      const { picturesOrder, wordsOrder } = state.sets.byId[setId];\n      const pictureIdx = picturesOrder.findIndex(\n        (pictureId) => pictureId === id\n      );\n      const status = state.pictures.byId[id].status;\n\n      picturesOrder.splice(pictureIdx, 1);\n      state.sets.byId[setId].wordsOrder = wordsOrder.filter(\n        (arrWord) => arrWord !== word\n      );\n\n      delete state.pictures.byId[id];\n      state.pictures.allIds = state.pictures.allIds.filter(\n        (pictureId) => pictureId !== id\n      );\n      state.results[setId].splice(pictureIdx, 1);\n\n      if (\n        status === ITEM_STATUS.INITIAL ||\n        status === ITEM_STATUS.CHANGED\n      ) {\n        state.deletedPictures.push(id);\n      }\n      if (status === ITEM_STATUS.ADDED) {\n        state.addedPictures = state.addedPictures.filter(\n          (picId) => picId !== id\n        );\n      }\n\n      return state;\n    },\n    setAdded(state) {\n      const MAX_SET_Q = 15;\n      if (state.sets.allIds.length >= MAX_SET_Q) {\n        return;\n      }\n\n      const newId = nanoid(5);\n      state.sets.allIds.push(newId);\n      state.sets.byId[newId] = {\n        id: newId,\n        name: newId,\n        repeatable: 1,\n        picturesOrder: [],\n        wordsOrder: [],\n        completed: false,\n        status: ITEM_STATUS.ADDED\n      };\n      state.results[newId] = [];\n      state.addedSets.push(newId);\n\n      return state;\n    },\n    setDeleted(state, action) {\n      const { id } = action.payload;\n      const status = state.sets.byId[id].status;\n      const setIdx = state.sets.allIds.findIndex(setId => setId === id)\n\n      if (state.sets.allIds.length == 1) {\n        return;\n      }\n\n      state.sets.allIds = state.sets.allIds.filter(setId => setId !== id);\n      delete state.sets.byId[id];\n\n      if(status === ITEM_STATUS.ADDED) {\n        state.addedSets = state.addedSets.filter(setId => setId !== id);\n      }\n      if(status === ITEM_STATUS.INITIAL) {\n        state.deletedSets.push(id);\n      }\n\n      if(state.currentSet >= setIdx) {\n        --state.currentSet\n      }\n\n      [state.addedPictures, state.deletedPictures, state.changedPictures].forEach(array => array.forEach((elem, idx, selfArr) => {\n        state.pictures.byId[elem].set === id && selfArr.splice(idx, 1);\n      }))\n\n      return state;\n    },\n  },\n  extraReducers: {\n    [getData.fulfilled]: (state, action) => {\n      state.dataStatus = \"succeeded\";\n      state.session = action.payload.session;\n      state.sets = action.payload.sets;\n      state.pictures = action.payload.pictures;\n      state.results = action.payload.results;\n\n      state.currentSet = 0;\n      state.addedSets = [];\n      state.deletedSets = [];\n      state.addedPictures = [];\n      state.changedPictures = [];\n      state.deletedPictures = [];\n\n      return state;\n    },\n    [sendData.fulfilled]: (state) => {\n      return state;\n    }\n  },\n});\n\nexport const {\n  readGameState,\n  placeWord,\n  returnWord,\n  switchSet,\n  completeSet,\n  redoSet,\n  setSecureStatus,\n  pictureAdded,\n  pictureChanged,\n  pictureDeleted,\n  setAdded,\n  setDeleted\n} = gameSlice.actions;\nexport default gameSlice.reducer;\n","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\constants.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\thunks\\gameMiddleware.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\mui\\themes.js",["157","158"],"import createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport MiuButton from \"@material-ui/core/Button\";\r\nimport muiTextField from \"@material-ui/core/TextField\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\nexport const mainTheme = createMuiTheme({\r\n\toverrides: {\r\n\t\tMuiOutlinedInput: {\r\n\t\t\tinput: {\r\n\t\t\t\tpadding: '0.5rem'\r\n\t\t\t},\r\n\t\t},\r\n\t\tMuiInputLabel:{\r\n\t\t\toutlined:{\r\n\t\t\t\ttransform: \"translate(14px, 10px) scale(1)\",\r\n\t\t\t}\r\n\t\t},\r\n\t\tMuiFormControl: {\r\n\t\t\troot: {\r\n\t\t\t\twidth: \"100%\"\r\n\t\t\t}\r\n\t\t},\r\n\t\tMuiButton: {\r\n\t\t\troot: {\r\n\t\t\t\tminWidth: \"25px\",\r\n\t\t\t}\r\n\t\t},\r\n\t\tMuiAvatar: {\r\n\t\t\troot: {\r\n\t\t\t\twidth: \"75px\",\r\n\t\t\t\theight: \"75px\",\r\n\t\t\t\ttextTransform: \"uppercase\",\r\n\t\t\t\tfontSize: \"2.5rem\"\r\n\t\t\t}\r\n\t\t},\r\n\t\tMuiCardContent: {\r\n\t\t\troot: {\r\n\t\t\t\tpadding: 0,\r\n\t\t\t}\r\n\t\t},\r\n\t\tMuiInputBase: {\r\n\t\t\tinput: {\r\n\t\t\t\tpadding: \"6px 11px 7px 0\",\r\n\t\t\t\ttextOverflow: \"ellipsis\",\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tlight: '#757ce8',\r\n\t\t\tmain: '#3f50b5',\r\n\t\t\tdark: '#002884',\r\n\t\t\tcontrastText: '#fff',\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tlight: '#ff7961',\r\n\t\t\tmain: '#f44336',\r\n\t\t\tdark: '#ba000d',\r\n\t\t\tcontrastText: '#fff',\r\n\t\t},\r\n\t}\r\n});\r\n\r\nmainTheme.palette.green = mainTheme.palette.augmentColor({\r\n\tmain: '#51c68e',\r\n\tcontrastText: '#ffffff',\r\n});\r\n\r\nmainTheme.palette.red = mainTheme.palette.augmentColor({\r\n\tmain: '#b81616',\r\n\tcontrastText: '#ffffff',\r\n});\r\n\r\nmainTheme.palette.orange = mainTheme.palette.augmentColor({\r\n\tmain: '#ffab40',\r\n\tcontrastText: '#ffffff',\r\n});\r\n\r\nconst colors = ['primary', 'secondary', 'green', 'red', 'orange']\r\n\r\nexport const Button = withStyles(theme => ({\r\n\troot: props => {\r\n\t\tconst color = colors.filter(col => props.color === col)\r\n\t\tif (!!color && props.variant === \"contained\") {\r\n\t\t\treturn {\r\n\t\t\t\tcolor: mainTheme.palette[color].contrastText,\r\n\t\t\t\tbackgroundColor: mainTheme.palette[color].main,\r\n\t\t\t\t\"&:hover\": {\r\n\t\t\t\t\tbackgroundColor: mainTheme.palette[color].dark,\r\n\t\t\t\t\t// Reset on touch devices, it doesn't add specificity\r\n\t\t\t\t\t\"@media (hover: none)\": {\r\n\t\t\t\t\t\tbackgroundColor: mainTheme.palette[color].main\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn {}\r\n\t\t}\r\n\t}\r\n}))(MiuButton);\r\n\r\nexport const IconButton = withStyles(theme => ({\r\n\troot: {\r\n\t\tpadding: \"2.5px\",\r\n\t}\r\n}))(Button);","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthLogIn\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthRegister\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\AuthSelection\\index.js",["159"],"import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport classes from \"../styles.module.css\";\r\nimport { Button } from \"../../../mui/themes\";\r\nimport {Frame} from \"../../Frame\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport const AuthSelection = () => {\r\n  return (\r\n    <Frame>\r\n      <div className={classes.textWrapper}>\r\n        <Typography variant=\"subtitle1\" component=\"p\">Войдите в систему или зарегистрируйтесь:</Typography>\r\n      </div>\r\n      <div>\r\n        <NavLink className={classes.buttonWrapper} to=\"/auth/login\">\r\n          <Button variant=\"contained\" color=\"green\">\r\n            Log In\r\n          </Button>\r\n        </NavLink>\r\n        <NavLink className={classes.buttonWrapper} to=\"/auth/register\">\r\n          <Button variant=\"contained\" color=\"secondary\">\r\n            Register\r\n          </Button>\r\n        </NavLink>\r\n      </div>\r\n    </Frame>\r\n  );\r\n};","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Auth\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\vars\\paths.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Header\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\templatePage\\index.js",["160"],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\TemplatePage\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Form\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Frame\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\MainPage\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Footer\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\GamesPage\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\GamesSelector\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\pages\\GamesPage\\GameItemPage\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\vars\\consts.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\Game\\index.js",["161","162","163"],"import React, {useState} from \"react\";\r\nimport classes from \"./styles.module.css\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { GAME_TYPES } from \"../../vars/consts\";\r\nimport { WordSet } from \"./WordSet\";\r\nimport { PictureSet } from \"./PictureSet\";\r\nimport {Stepper} from \"../../components/Stepper\";\r\nimport {IconButton} from \"../../mui/themes\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport {useHistory, useRouteMatch} from \"react-router-dom\";\r\n\r\nexport const Game = (props) => {\r\n  const [currentSetId, setCurrentSetId] = useState(\"item-1\"),\r\n    {item, handlers} = props;\r\n\r\n  const SetTypes = {\r\n    [GAME_TYPES.WORDS]: <WordSet {...props} currentSetId={currentSetId}/>,\r\n    [GAME_TYPES.PICTURES]: <PictureSet {...props} setId={currentSetId}/>,\r\n  };\r\n\r\n  return (\r\n    <section className={`${classes.gameWrapper}`}>\r\n      <Box className={`gridElement ${classes.s1}`}>\r\n        <Box>\r\n          <Typography variant=\"h4\" component=\"h1\">\r\n            Set 1\r\n          </Typography>\r\n          <Typography variant=\"body1\" component=\"span\">\r\n            Lorem ipsum dolor sit amet\r\n          </Typography>\r\n        </Box>\r\n        <IconButton onClick={handlers.clickBackHandler} className={classes.returnButton} variant=\"contained\" color=\"primary\">\r\n          <ArrowBackIcon/>\r\n        </IconButton>\r\n      </Box>\r\n      <Box className={`gridElement`}>\r\n      {SetTypes[item.type]}\r\n      </Box>\r\n      <Box className={classes.nav}>\r\n        <Stepper/>\r\n      </Box>\r\n    </section>\r\n  );\r\n};\r\n","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Proceed\\index.js",["164"],"import React, {useEffect, useState} from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport {createPortal} from \"react-dom\";\r\n\r\n\r\nexport const Proceed = ({ className = 'root-portal', el = 'div', wrapper=\"body\"}) => {\r\n\tconst [container] = useState(document.createElement(el))\r\n\r\n\tcontainer.classList.add(className)\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.querySelector(wrapper).appendChild(container)\r\n\t\treturn () => {\r\n\t\t\tdocument.querySelector(wrapper).removeChild(container)\r\n\t\t}\r\n\t}, [])\r\n\r\n\treturn createPortal(\r\n\t\t<Loader\r\n\t\t\ttype=\"ThreeDots\"\r\n\t\t\tcolor=\"#FFF\"\r\n\t\t\theight={\"20vh\"}\r\n\t\t\twidth={\"20vh\"}\r\n\t\t/>, container\r\n\t)\r\n}","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\Game\\WordSet\\index.js",["165"],"import React from 'react';\r\nimport classes from '../styles.module.css';\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nexport const WordSet = (props) => {\r\n\r\n\treturn (\r\n\t\t<Box className={classes.setWrapper}>\r\n\t\t\tWORD\r\n\t\t</Box>\r\n\t)\r\n}","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\Game\\PictureSet\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\GamesSelector\\ItemSeletor.js",["166","167"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport classes from \"./styles.module.css\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { NavigateBefore, NavigateNext } from \"@material-ui/icons\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { Proceed } from \"../../components/Proceed\";\r\n\r\nexport const ItemSelector = ({ title, items, flags, selectedItemId, pagination, handlers }) => {\r\n\treturn (\r\n\t\t<section className={`gridElement ${classes.gamesSelector}`}>\r\n\t\t\t{flags.loading && <Proceed wrapper={\"main\"} />}\r\n\t\t\t<Typography variant=\"h4\" component=\"h1\">\r\n\t\t\t\t{title\r\n\t\t\t\t\t.slice(1)\r\n\t\t\t\t\t.split(\"-\")\r\n\t\t\t\t\t.map((e) => _.capitalize(e))\r\n\t\t\t\t\t.join(\" \")}\r\n\t\t\t</Typography>\r\n\t\t\t<Fade in={flags.animateListItem}>\r\n\t\t\t\t<List className={`${classes.itemsWrapper}`}>\r\n\t\t\t\t\t<Divider />\r\n\t\t\t\t\t{items\r\n\t\t\t\t\t\t.slice(pagination.startIdx, pagination.startIdx + pagination.items)\r\n\t\t\t\t\t\t.map((e) => (\r\n\t\t\t\t\t\t\t<Fragment key={e.id}>\r\n\t\t\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\t\t\tselected={selectedItemId === e.id}\r\n\t\t\t\t\t\t\t\t\tonClick={handlers.handleListItemClick}\r\n\t\t\t\t\t\t\t\t\tdata-value={e.id}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<ListItemText primary={e.name} />\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t</List>\r\n\t\t\t</Fade>\r\n\t\t\t<IconButton\r\n\t\t\t\tdata-value={\"backward\"}\r\n\t\t\t\tonClick={handlers.handleListScroll}\r\n\t\t\t\tdisabled={pagination.startIdx === 0}\r\n\t\t\t>\r\n\t\t\t\t<NavigateBefore />\r\n\t\t\t</IconButton>\r\n\t\t\t<IconButton\r\n\t\t\t\tdata-value={\"forward\"}\r\n\t\t\t\tonClick={handlers.handleListScroll}\r\n\t\t\t\tdisabled={pagination.startIdx >= items.length - pagination.items}\r\n\t\t\t>\r\n\t\t\t\t<NavigateNext />\r\n\t\t\t</IconButton>\r\n\t\t</section>\r\n\t);\r\n};\r\n","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\containers\\Game\\Constructor\\index.js",["168","169"],"import React, {useEffect, useState} from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport classes from \"../styles.module.css\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {Button, IconButton} from \"../../../mui/themes\";\r\nimport { testData } from \"../../../pages/TemplatePage\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { PAGE_STATE } from \"../../../vars/consts\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nconst offsetTop = (x) => { return { marginTop: x }}\r\n\r\n\r\nexport const Constructor = (props) => {\r\n\tconst { gameState } = props;\r\n  return (\r\n    gameState === PAGE_STATE.PREPARING && <></>,\r\n    gameState === PAGE_STATE.RUNNING && (<>\r\n\t    <SetControlsForm {...props}/>\r\n\t    <ItemChangeForm {...props} />\r\n    </>)\r\n  );\r\n};\r\n\r\nconst SetControlsForm = (props) => {\r\n\tconst { item } = props;\r\n\r\n\treturn (\r\n  <>\r\n\t  <Box className={classes.asideChangeForm} component=\"form\">\r\n\t\t  <Typography variant=\"body1\" component=\"span\">\r\n\t\t\t  {\"Сет: \"}\r\n\t\t  </Typography>\r\n\t\t  <Typography variant=\"h6\" component=\"span\">\r\n\t\t\t  \"{item.name}\"\r\n\t\t  </Typography>\r\n\t\t  <TextField\r\n\t\t\t  style={offsetTop(\"5px\")}\r\n\t\t\t  className={`${classes.inputField}`}\r\n\t\t\t  label=\"Title\"\r\n\t\t\t  defaultValue={item.name}\r\n\t\t  />\r\n\t\t  <TextField\r\n\t\t\t  style={offsetTop(\"5px\")}\r\n\t\t\t  className={`${classes.inputField} ${classes.offsetTop1X}`}\r\n\t\t\t  label=\"Subtitle\"\r\n\t\t\t  defaultValue={\"Lorem ipsum dolor sit amet\"}\r\n\t\t\t  multiline={true}\r\n\t\t\t  spellCheck={false}\r\n\t\t  />\r\n\t\t  <Box className={`${classes.offsetTop4X} ${classes.controls}`}>\r\n\t\t\t  <IconButton className={classes.iconButton} variant=\"contained\" color=\"primary\">\r\n\t\t\t\t  <SaveIcon/>\r\n\t\t\t  </IconButton>\r\n\t\t\t  <Button variant=\"contained\" color=\"red\">\r\n\t\t\t\t  УДАЛИТЬ СЕТ\r\n\t\t\t  </Button>\r\n\t\t  </Box>\r\n\t  </Box>\r\n  </>);\r\n};\r\n\r\nconst ItemChangeForm = (props) => {\r\n\tconst {selectedItem} = props;\r\n\tconst [type, setType] = useState(\"10\");\r\n\tconst [image, setImage] = useState(!!selectedItem && testData.pictureItems.byIds[selectedItem].image)\r\n\tconst [word, setWord] = useState(!!selectedItem && testData.pictureItems.byIds[selectedItem].word)\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif(!!selectedItem) {\r\n\t\t\t\tsetImage(testData.pictureItems.byIds[selectedItem].image);\r\n\t\t\t\tsetWord(testData.pictureItems.byIds[selectedItem].word);\r\n\t\t\t}\r\n\t\t},[selectedItem]\r\n\t)\r\n\r\n\tconst handleInputChange = (event) => (changer) => {\r\n\t\tchanger(event.target.value);\r\n\t}\r\n\r\n  const handleChange = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.asideChangeForm} component=\"form\">\r\n        <Box className={classes.imageWrapper}>\r\n          <img\r\n            src={image ? image : \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"}\r\n            alt=\"1\"\r\n          />\r\n        </Box>\r\n\r\n        <TextField\r\n\t        style={offsetTop(\"5px\")}\r\n\t        className={`${classes.inputField}`}\r\n          label=\"Image\"\r\n\t        onChange={(e) => setImage(e.target.value)}\r\n\t        value={image}\r\n        />\r\n        <TextField\r\n\t        style={offsetTop(\"5px\")}\r\n\t        className={`${classes.inputField}`}\r\n          label=\"Word\"\r\n\t        value={word}\r\n\t        onChange={(e) => setWord(e.target.value)}\r\n        />\r\n        <Box className={`${classes.selectorWrapper} ${classes.offsetTop2X}`}>\r\n          <InputLabel id=\"type-selector\" shrink>\r\n            Type\r\n          </InputLabel>\r\n          <Select\r\n            className={classes.typeSelector}\r\n            labelId=\"type-selector\"\r\n            value={type}\r\n            onChange={handleChange}\r\n          >\r\n            <MenuItem value={10}>All</MenuItem>\r\n          </Select>\r\n        </Box>\r\n        <Box className={`${classes.offsetTop4X} ${classes.controls}`}>\r\n\t        <IconButton className={classes.iconButton} variant=\"contained\" color=\"primary\">\r\n            <SaveIcon/>\r\n          </IconButton>\r\n\t        <IconButton className={classes.iconButton} variant=\"contained\" color=\"red\">\r\n\t\t        <DeleteForeverIcon/>\r\n\t        </IconButton>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};","C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\components\\Stepper\\index.js",[],"C:\\Users\\Михаил\\WebstormProjects\\languagegames\\src\\features\\hooks\\useWindowDimensions\\index.js",[],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":7,"column":3,"nodeType":"176","messageId":"177","endLine":7,"endColumn":11},{"ruleId":"174","severity":1,"message":"178","line":24,"column":9,"nodeType":"176","messageId":"177","endLine":24,"endColumn":24},{"ruleId":"174","severity":1,"message":"179","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":13},{"ruleId":"174","severity":1,"message":"180","line":129,"column":37,"nodeType":"176","messageId":"177","endLine":129,"endColumn":42},{"ruleId":"181","severity":1,"message":"182","line":132,"column":37,"nodeType":"183","messageId":"184","endLine":132,"endColumn":39},{"ruleId":"181","severity":1,"message":"182","line":132,"column":63,"nodeType":"183","messageId":"184","endLine":132,"endColumn":65},{"ruleId":"181","severity":1,"message":"182","line":216,"column":36,"nodeType":"183","messageId":"184","endLine":216,"endColumn":38},{"ruleId":"174","severity":1,"message":"185","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":20},{"ruleId":"174","severity":1,"message":"186","line":5,"column":9,"nodeType":"176","messageId":"177","endLine":5,"endColumn":19},{"ruleId":"174","severity":1,"message":"187","line":5,"column":8,"nodeType":"176","messageId":"177","endLine":5,"endColumn":13},{"ruleId":"174","severity":1,"message":"188","line":5,"column":7,"nodeType":"176","messageId":"177","endLine":5,"endColumn":15},{"ruleId":"174","severity":1,"message":"189","line":11,"column":9,"nodeType":"176","messageId":"177","endLine":11,"endColumn":19},{"ruleId":"174","severity":1,"message":"190","line":11,"column":21,"nodeType":"176","messageId":"177","endLine":11,"endColumn":34},{"ruleId":"174","severity":1,"message":"191","line":14,"column":24,"nodeType":"176","messageId":"177","endLine":14,"endColumn":39},{"ruleId":"192","severity":1,"message":"193","line":16,"column":5,"nodeType":"194","endLine":16,"endColumn":7,"suggestions":"195"},{"ruleId":"174","severity":1,"message":"196","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":15},{"ruleId":"174","severity":1,"message":"197","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"198","line":1,"column":38,"nodeType":"176","messageId":"177","endLine":1,"endColumn":46},{"ruleId":"174","severity":1,"message":"199","line":9,"column":8,"nodeType":"176","messageId":"177","endLine":9,"endColumn":19},{"ruleId":"174","severity":1,"message":"200","line":83,"column":8,"nodeType":"176","messageId":"177","endLine":83,"endColumn":25},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'isAuthenticated' is assigned a value but never used.","'axios' is defined but never used.","'owner' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'muiTextField' is defined but never used.","'makeStyles' is defined but never used.","'Paper' is defined but never used.","'testData' is assigned a value but never used.","'useHistory' is defined but never used.","'useRouteMatch' is defined but never used.","'setCurrentSetId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'container'. Either include it or remove the dependency array.","ArrayExpression",["203"],"'classes' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'FormControl' is defined but never used.","'handleInputChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"204","fix":"205"},"Update the dependencies array to be: [container]",{"range":"206","text":"207"},[474,476],"[container]"]